{"accordion.html":{"href":"accordion.html","name":"Accordion","component":"accordion","description":"While remaining backward compatible, the recommended markup has been updated to implement the [WAI-ARIA 1.1 Accordion design pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) to better support accessibility for keyboard and screen reader users."},"actionbar.html":{"href":"actionbar.html","name":"Action bar","component":"actionbar","description":"Floating action bar that appears in selection mode."},"actionbutton.html":{"href":"actionbutton.html","name":"Action button","component":"actionbutton","description":"- For Action Buttons that only contain an icon with no label, do not include the element with the `.spectrum-ActionButton-label` class in the markup\n- If an icon and a label are both used, ensure that the element with the `.spectrum-ActionButton-label` class comes after the `.spectrum-Icon` element.\n- If the hold icon is used, ensure that the element with the `.spectrum-ActionButton-hold` class comes before the `.spectrum-Icon` element.\n- When using `.spectrum-ActionButton--staticWhite` or `.spectrum-ActionButton--staticblack`, use the `--mod-actionbutton-content-color-default` custom property to set the text color when selected.\n"},"actiongroup.html":{"href":"actiongroup.html","name":"Action group","component":"actiongroup"},"actionmenu.html":{"href":"actionmenu.html","name":"Action menu","component":"actionmenu","description":"Simply an action button with a Popover. Note that the `is-selected` class should be applied to the button when the menu is open. Also note the accessibility roles are different for an action menu vs a normal menu."},"alertbanner.html":{"href":"alertbanner.html","name":"Alert banner","component":"alertbanner","description":"Alert banners show pressing and high-signal messages, such as system alerts. They're meant to be noticed and prompt users to take action."},"asset.html":{"href":"asset.html","name":"Asset","component":"asset"},"alertdialog.html":{"href":"alertdialog.html","name":"Alert dialog","component":"alertdialog"},"assetlist.html":{"href":"assetlist.html","name":"Asset list","component":"assetlist","description":"A selectable list of Assets, often used inside of Miller Columns."},"assetcard.html":{"href":"assetcard.html","name":"Asset card","component":"assetcard","description":"- Set the `--spectrum-assetcard-asset-size` custom property to the size you want to display the asset as\n"},"avatar.html":{"href":"avatar.html","name":"Avatar","component":"avatar","description":"An image representing a user.\n\nAn avatar image is wrapped in a link that uses the `.spectrum-Avatar-link`\nclass by default, however, an avatar may also be used without a link.\nWhen disabled the avatar should only be used without a link.\n"},"badge.html":{"href":"badge.html","name":"Badge","component":"badge","description":"- Badge may include a label with no icon, an icon with no label, or an icon with a label\n- Badge t-shirt sizes correspond to icon sizes\n- Fixed positioning impacts the border radius of the badge component\n"},"breadcrumb.html":{"href":"breadcrumb.html","name":"Breadcrumbs","component":"breadcrumb"},"button-accent.html":{"href":"button-accent.html","name":"Button - accent","component":"button","description":"The call to action button communicates strong emphasis and is reserved for encouraging critical actions."},"button-negative.html":{"href":"button-negative.html","name":"Button - negative","component":"button","description":"The negative button is for high emphasis of negative or destructive actions."},"button-primary.html":{"href":"button-primary.html","name":"Button - primary","component":"button","description":"The primary button is used for medium emphasis."},"button-secondary.html":{"href":"button-secondary.html","name":"Button - secondary","component":"button","description":"The secondary button is for low emphasis."},"button-staticcolor.html":{"href":"button-staticcolor.html","name":"Button - static color","component":"button","description":"When a button needs to be placed on top of a colored background or a visual, use the over background button. In order to implement this button, you must set the CSS color property of a parent element to the same value as the background the button is placed against."},"calendar.html":{"href":"calendar.html","name":"Calendar","component":"calendar"},"checkbox.html":{"href":"checkbox.html","name":"Checkbox","component":"checkbox","description":"- Checkboxes allow users to select multiple items from a list of individual items, or mark one individual item as selected.\n- Checkboxes should not be used on their own, they should always be used within a [FieldGroup](fieldgroup.html).\n- Invalid checkboxes are indicated with an alert [HelpText](helptext.html) when included in a Fieldgroup.\n"},"buttongroup.html":{"href":"buttongroup.html","name":"Button group","component":"buttongroup"},"card-asset.html":{"href":"card-asset.html","name":"Card - asset preview","component":"card","description":"A standard cards with a full-sized asset preview."},"card-gallery.html":{"href":"card-gallery.html","name":"Card - gallery","component":"card","description":"A gallery card for an image."},"card.html":{"href":"card.html","name":"Card","component":"card"},"clearbutton.html":{"href":"clearbutton.html","name":"Clear button","component":"clearbutton","description":"Used in search and tags."},"closebutton.html":{"href":"closebutton.html","name":"Close button","component":"closebutton","description":"A button used to close or dismiss components.\n"},"coachindicator.html":{"href":"coachindicator.html","name":"Coach indicator","component":"coachindicator"},"coachmark.html":{"href":"coachmark.html","name":"Coach mark","component":"coachmark"},"colorarea.html":{"href":"colorarea.html","name":"Color area","component":"colorarea","description":"- The `.spectrum-ColorHandle` should be moved with the `transform: translate(x, y)` style property as the sliders are dragged\n- Set the `background` style property of `.spectrum-ColorArea-gradient` to the gradient of the colors to be selected\n- Set the `value` attribute of `.spectrum-ColorArea-slider[name=x]` to the currently selected x value (i.e. saturation)\n- Set the `value` attribute of `.spectrum-ColorArea-slider[name=y]` to the currently selected y value (i.e. value)\n- Set the value of the ColorHandle component to the selected color\n- Marshall focus between the saturation and value sliders according to which keys are pressed (up/down for value, left/right for saturation)\n"},"colorhandle.html":{"href":"colorhandle.html","name":"Color handle","component":"colorhandle","description":"- Set the `--spectrum-picked-color` custom property to the CSS color value you want to show\n- Apply `.is-open` to `.spectrum-ColorLoupe` display the loupe\n"},"colorloupe.html":{"href":"colorloupe.html","name":"Color loupe","component":"colorloupe","description":"- Set the `--spectrum-picked-color` custom property to the CSS color value you want to show\n- Apply `.is-open` to display the loupe\n- Color Loupe does not have a disabled style; do not show it when the handle its attached to is disabled.\n"},"colorslider.html":{"href":"colorslider.html","name":"Color slider","component":"colorslider","description":"- Set the color of the nested Color handle component to match Color slider's currently selected color using its custom property: `--spectrum-picked-color`.\n- The `.spectrum-ColorHandle` should be moved with `inset-inline-*` (horizontal) or `inset-block-*` (vertical) style properties as the slider is dragged.\n- Ensure that you set the `min` and `max` attributes of the `.spectrum-ColorSlider-slider` input to the corresponding scale (i.e. `0` to `1` for `a`, `0` to `255` for `r`, etc).\n- Ensure that you set the `step` attribute of the `.spectrum-ColorSlider-slider` input appropriately (i.e. `0.1` for `a`, `s`, `v` or `1` and `h`, `r`, etc).\n- Set the `background` style property of `.spectrum-ColorSlider-gradient` to the gradient of the colors to be selected. The CSS will automatically reverse the gradient element horizontally when using a RTL (right-to-left) base direction.\n- Alternatively, provide a `<canvas>` or `<img>` element with the gradient you want to use and apply the `.spectrum-ColorSlider-gradient` class.\n"},"colorwheel.html":{"href":"colorwheel.html","name":"Color wheel","component":"colorwheel","description":"- For a given rotation on the wheel, `X`, the `.spectrum-ColorHandle` should be moved by applying the style property `transform: translate(${Y * Math.cos(X)}px, ${Y * Math.sin(X)}px)`, where Y is  ((radius -  `.spectrum-colorwheel-track-width`) / 2))\n- Set the `value` attribute of `.spectrum-ColorWheel-value` to the currently selected color (i.e. `hsl(326, 100%, 50%)`)\n- Add `.is-dragged` when the handle is being dragged\n- To display with ColorArea inside of ColorWheel, add ColorArea to `spectrum-ColorWheel-colorarea-container` with `style=\"--mod-colorarea-width: 70.1%; --mod-colorarea-height: 70.1%\"`\n- `.spectrum-colorwheel-colorarea-container-size` is hard coded to position the ColorArea within the ColorWheel using `.spectrum-color-wheel-color-area-margin`. Using JS container size can be calcaulted with `Math.sqrt(2 * R * R)`, where R is the innerRadius as calcaulted for the clip paths\n- `.spectrum-colorwheel-path`, `.spectrum-colorwheel-path-borders` and `.spectrum-colorwheel-colorarea-container` are hard coded in CSS and include token values in custom CSS variables so they can be accessed with JS to and used to calcualte these values, `const wheel = document.querySelector(\".spectrum-ColorWheel-wheel\") getComputedStyle(wheel).getPropertyValue('--track-width'))`\n"},"combobox.html":{"href":"combobox.html","name":"Combobox","component":"combobox","description":"Combobox combines a text field with a picker menu."},"cyclebutton.html":{"href":"cyclebutton.html","name":"Cycle button","component":"cyclebutton"},"contextualhelp.html":{"href":"contextualhelp.html","name":"Contextual help","component":"contextualhelp"},"datepicker.html":{"href":"datepicker.html","name":"Date picker","component":"datepicker","description":"A date picker displays a Text Field input with a button next to it, and can display two Text Fields next to each other for choosing a date range."},"dial.html":{"href":"dial.html","name":"Dial","component":"dial","description":"A dial for turning it up to 11."},"divider.html":{"href":"divider.html","name":"Divider","component":"divider"},"dialog.html":{"href":"dialog.html","name":"Dialog","component":"dialog","description":"In order to avoid blurry Dialogs, wrap them in `<div class=\"spectrum-Dialog-wrapper\">` and apply `.is-open` to both the Wrapper and the Dialog at the same time. See [this example](#dialog-wrapped) for a working demonstration."},"dropzone.html":{"href":"dropzone.html","name":"Drop zone","component":"dropzone","description":"A Drop Zone is an area on the screen into a which an object can be dragged and dropped to accomplish a task. For example, a Drop Zone might be used in an upload workflow to enable the user to simply drop a file from their operating system into the Drop Zone, which is a more efficient and intuitive action, rather than utilize the standard \"Choose File\" dialog."},"dropindicator.html":{"href":"dropindicator.html","name":"Drop indicator","component":"dropindicator","description":"A Drop Indicator is used to show the insertion position into a list or table."},"fieldgroup.html":{"href":"fieldgroup.html","name":"Field group","component":"fieldgroup","description":"- A group of fields, usually Radios or Checkboxes.\n- Field group incorporates the Help text component which may appear below a Field group.\n- Help text is necessary to denote invalid checkbox fields, invalid radio button fields, and required fields.\n- Invalid radio buttons are signified only by negative Help text.\n- Invalid checkboxes are signified by negative Help text and the negative/invalid color on the input box.\n"},"fieldlabel.html":{"href":"fieldlabel.html","name":"Field label","component":"fieldlabel"},"form.html":{"href":"form.html","name":"Form","component":"fieldlabel","description":"Form provides structure and spacing for your form fields."},"helptext.html":{"href":"helptext.html","name":"Help text","component":"helptext"},"floatingactionbutton.html":{"href":"floatingactionbutton.html","name":"Floating action button","component":"floatingactionbutton","description":"- Floating action button is used to give users a more prominent button for high frequency actions\n- When using Floating Action Button in dark themes, the `background-layer-color-2` will often show up on the base color `gray-50` or `gray-75` or on content, images, etc.\n"},"illustratedmessage.html":{"href":"illustratedmessage.html","name":"Illustrated message","component":"illustratedmessage","description":"The Illustrated Message displays an illustration along with a heading and description. Optionally, part of the illustration can use an accent color. It can be used for status and errors, or as a call to action. For example, the Drop Zone component makes use of Illustrated Message as an area to drag and drop files."},"infieldbutton.html":{"href":"infieldbutton.html","name":"In-field button","component":"infieldbutton"},"inlinealert.html":{"href":"inlinealert.html","name":"In-line alert","component":"inlinealert"},"link.html":{"href":"link.html","name":"Link","component":"link"},"logicbutton.html":{"href":"logicbutton.html","name":"Logic button","component":"logicbutton","description":"A LogicButton displays an operator within a boolean logic sequence."},"menu.html":{"href":"menu.html","name":"Menu","component":"menu"},"modal.html":{"href":"modal.html","name":"Modal","component":"modal","description":"A modal component used primarily by Dialog"},"miller.html":{"href":"miller.html","name":"Miller columns","component":"miller"},"opacitycheckerboard.html":{"href":"opacitycheckerboard.html","name":"Opacity Checkerboard","component":"opacitycheckerboard","description":"Opacity checkerboard is used with other components to highlight opacity."},"page.html":{"href":"page.html","name":"Page","component":"page","description":"The outer page container. A parent tag should only have the `.spectrum` class if using a standalone CSS file.\nIf using multistops, a parent tag should have both the `.spectrum` class and the corresponding colorstop variant class, i.e. `.spectrum--light`.\nFinally, if scaling to large with the diff strategy, a parent tag should have the `.spectrum--large` class.\n"},"picker.html":{"href":"picker.html","name":"Picker","component":"picker"},"pagination-button-style.html":{"href":"pagination-button-style.html","name":"Pagination - button style","component":"pagination"},"pagination-explicit.html":{"href":"pagination-explicit.html","name":"Pagination - explicit","component":"pagination"},"pagination-listing.html":{"href":"pagination-listing.html","name":"Pagination - page","component":"pagination"},"pickerbutton.html":{"href":"pickerbutton.html","name":"Picker button","component":"pickerbutton"},"popover.html":{"href":"popover.html","name":"Popover","component":"popover"},"meter.html":{"href":"meter.html","name":"Meter","component":"progressbar","description":"Meter is implemented using the [Progress bar](progressbar.html) component. Refer to the [Progress bar API docs](progressbar.html) for API details.\nMeter should be only used with `S` or `L` t-shirt sizes. [The Meter table of options](https://spectrum.adobe.com/page/meter/#Table-of-options) provides further details on which variants are available.\n\n| Previous size classname         | New size classname                |\n| ------------------------------- | --------------------------------- |\n| `.spectrum-ProgressBar--sizeS`  | `.spectrum-Meter--sizeS`    |\n| `.spectrum-ProgressBar--sizeL`  | `.spectrum-Meter--sizeL`    |\n"},"progressbar.html":{"href":"progressbar.html","name":"Progress bar","component":"progressbar"},"progresscircle.html":{"href":"progresscircle.html","name":"Progress circle","component":"progresscircle"},"quickaction.html":{"href":"quickaction.html","name":"Quick actions","component":"quickaction","description":"Note that the `.spectrum-QuickActions-overlay` class should be placed on the container where the Quick Actions are displayed, and the `.spectrum-QuickActions--textOnly` class should be applied when the buttons have text only."},"radio.html":{"href":"radio.html","name":"Radio","component":"radio","description":"- Radio buttons allow users to select a single option from a list of mutually exclusive options. All possible options are exposed up front for users to compare.\n- Radio buttons should not be used on their own, they should always be used within a [FieldGroup](fieldgroup.html).\n- Invalid radio buttons are signified by including [HelpText](helptext.html) in a [FieldGroup](fieldgroup.html). Sample usage for an invalid radio state is included in the [FieldGroup](fieldgroup.html#invalid) documentation.\n"},"search.html":{"href":"search.html","name":"Search","component":"search","description":"This component contains a single input field with both a magnifying glass icon and a clear (\"reset\") button displayed within it. When making use of this component, the clear button should only be displayed when the input has a value."},"searchwithin.html":{"href":"searchwithin.html","name":"Search within","component":"searchwithin","description":"Override the width of the component where necessary."},"rating.html":{"href":"rating.html","name":"Rating","component":"rating"},"sidenav.html":{"href":"sidenav.html","name":"Side navigation","component":"sidenav","description":"Side navigation lets users navigate the entire content of a product or a section. Make sure to use the appropriate variant for the context and user needs. Don’t mix behavior, styles, or variations together in a single navigation menu.\n"},"splitview.html":{"href":"splitview.html","name":"Split view","component":"splitview"},"statuslight.html":{"href":"statuslight.html","name":"Status light","component":"statuslight"},"splitbutton.html":{"href":"splitbutton.html","name":"Split button","component":"splitbutton","description":"Instead of a single split button (now a deprecated component), use a button group to show any additional actions related to the most critical action. Reference [Spectrum documentation](https://spectrum.adobe.com/page/button-group/#Use-a-button-group-to-show-additional-actions) for more information."},"slider.html":{"href":"slider.html","name":"Slider","component":"slider"},"steplist.html":{"href":"steplist.html","name":"Steplist","component":"steplist"},"swatch.html":{"href":"swatch.html","name":"Swatch","component":"swatch","description":"- Set `--spectrum-picked-color` to customize the swatch fill background color.\n"},"stepper.html":{"href":"stepper.html","name":"Stepper","component":"stepper"},"swatchgroup.html":{"href":"swatchgroup.html","name":"Swatch group","component":"swatchgroup","description":"- Grouped swatches must use the `.spectrum-Swatch--roundingNone` class to help minimize the Hermann grid illusion\n- Swatches with a color that have a contrast ratio of less than 3:1 should have `.spectrum-Swatch--lightBorder` class, otherwise, it should have the `.spectrum-Swatch--noBorder` class\n"},"switch.html":{"href":"switch.html","name":"Switch","component":"switch"},"table.html":{"href":"table.html","name":"Table","component":"table","description":"The Table component is for displaying tabular info, with the option for sorting or row selection."},"tabs.html":{"href":"tabs.html","name":"Tabs","component":"tabs"},"tag.html":{"href":"tag.html","name":"Tag","component":"tag","description":"Tags allow users to categorize content. They can represent keywords or people, and are grouped to describe an item or a search request."},"taggroup.html":{"href":"taggroup.html","name":"Tag group","component":"taggroup","description":"A group of <a href=\"https://opensource.adobe.com/spectrum-css/tag.html\">tags</a>. Tags allow users to categorize content. They can represent keywords or people, and are grouped to describe an item or a search request. When horizontal space is limited in a tag group, the individual tags wrap to form another line."},"thumbnail.html":{"href":"thumbnail.html","name":"Thumbnail","component":"thumbnail"},"textarea.html":{"href":"textarea.html","name":"Text area","component":"textfield","description":"A multi-line text field (aka textarea)"},"textfield.html":{"href":"textfield.html","name":"Text field","component":"textfield","description":"A single-line text field (aka textfield)"},"toast.html":{"href":"toast.html","name":"Toast","component":"toast"},"tooltip.html":{"href":"tooltip.html","name":"Tooltip","component":"tooltip"},"tray.html":{"href":"tray.html","name":"Tray","component":"tray","description":"Tray Dialogs are typically used to portray information on mobile device or\nsmaller screens.\n"},"treeview.html":{"href":"treeview.html","name":"Tree view","component":"treeview","description":"The typical usage of a Tree view involves nesting a `.spectrum-Treeview` element within the `.spectrum-TreeView-item` parent element.\nThe visibility of child treeviews is controlled by adding `.is-open` to the `.spectrum-TreeView-item` of the parent element.\n"},"typography-body.html":{"href":"typography-body.html","name":"Typography body","component":"typography","description":"Body is a typography component primarily used within Spectrum components and for blocks of text."},"typography-code.html":{"href":"typography-code.html","name":"Typography code","component":"typography","description":"Code is a typography component used for text that represents code."},"typography-detail.html":{"href":"typography-detail.html","name":"Typography detail","component":"typography","description":"Detail is a typography component used for disclosing extra information or smaller items in hierarchical relationships of text."},"typography-heading.html":{"href":"typography-heading.html","name":"Typography heading","component":"typography","description":"Heading is a typography component used to create various levels of hierarchies between text."},"typography-international.html":{"href":"typography-international.html","name":"Typography (internationalized)","component":"typography","description":"Internationalized typography examples. Note that, for these examples to work correctly, your Typekit needs to include the appropriate Han fonts."},"typography.html":{"href":"typography.html","name":"Typography","component":"typography","description":"Spectrum Typography is broken out into several separate components.\n\nIn addition, the previous deprecated Typogaphy implementations ([legacy](typography-legacy.html), [depreacted](typography-deprecated.html)) are still shipped, but their usage is discouraged.\n"},"well.html":{"href":"well.html","name":"Well","component":"well"}}