-
  util.populateInfo(component);

doctype html
html(lang='en-US' dir="ltr").spectrum.spectrum--light.spectrum--medium
  head
    title #{component.name} - Spectrum CSS

    include ../includes/dependencies.pug

    if component.styles
      style(type='text/css')!= component.styles

  body

    article.spectrum-CSSComponent

      header(id=component.slug).spectrum-CSSComponent-heading
        h1.spectrum-CSSComponent-title.spectrum-Heading.spectrum-Heading--sizeXXXL.spectrum-Heading--serif
          a(href=`#${component.slug}`).spectrum-BigSubtleLink #{component.name}
        p.spectrum-CSSComponent-version.spectrum-Body.spectrum-Body--sizeS Version #{pkg.version}

      if status == 'Deprecated'
        div.spectrum-AlertBanner.spectrum-AlertBanner--info.is-open
          div.spectrum-AlertBanner-body
            div.spectrum-AlertBanner-content
              svg.spectrum-Icon.spectrum-UIIcon-Info100.spectrum-AlertBanner-icon(focusable="false" aria-hidden="true")
                use(xlink:href="#spectrum-icon-18-Info")
              p.spectrum-AlertBanner-text This component is deprecated and will no longer receive updates.

      if component.description
        section.spectrum-CSSComponent-description.spectrum-Body.spectrum-Body--sizeL!= util.markdown.render(component.description)

      each example in examples
      -
        if (status === 'Deprecated') example.status = 'Deprecated';

        article.spectrum-CSSExample
          if example != component
            header(id=example.slug)
              h3.spectrum-CSSExample-heading.spectrum-Heading.spectrum-Heading--sizeS #{example.name}

            if example.description
              section.spectrum-CSSExample-description.spectrum-Body.spectrum-Body--sizeL!= util.markdown.render(example.description)

          if example.markup

            section.spectrum-CSSExample-container
              .spectrum-CSSExample-example(class=example.demoClassName ? `${example.demoClassName}` : '')!= example.markup

    div.spectrum-Underlay#spectrum-underlay
