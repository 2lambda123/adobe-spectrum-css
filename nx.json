{
    "$schema": "./node_modules/nx/schemas/nx-schema.json",
    "tasksRunnerOptions": {
        "default": {
            "options": {
                "cacheableOperations": ["build", "dev", "lint", "profile", "compare", "coverage", "test"]
            }
        }
    },
    "cli": {
        "warnings": {
            "versionMismatch": true
        },
        "packageManager": "yarn",
        "analytics": false
    },
    "namedInputs": {
        "core": ["{projectRoot}/*.css", "{projectRoot}/themes/*.css"],
        "scripts": ["{projectRoot}/stories/*.js"],
        "stylelint": [
            "{workspaceRoot}/.stylelintignore",
            "{workspaceRoot}/stylelint.config.js",
            "{workspaceRoot}/plugins/stylelint-*/index.js"
        ],
        "eslint": ["{workspaceRoot}/.eslintrc.js"],
        "tools": [
            "{projectRoot}/*.json",
            "{workspaceRoot}/postcss.config.js",
            "{workspaceRoot}/plugins/postcss-*/index.js"
        ]
    },
    "targetDefaults": {
        "clean": {
            "inputs": ["{projectRoot}/dist", { "externalDependencies": ["rimraf"] }],
            "outputs": [],
            "executor": "nx:run-commands",
            "options": {
                "commands": [
                    "rimraf {projectRoot}/dist",
                    "test -d {projectRoot}/dist && echo \"Error: dist directory could not be removed\" && exit 1 || exit 0"
                ],
                "parallel": false
            }
        },
        "compare": {
            "dependsOn": ["build"],
            "inputs": [
                "{projectRoot}/dist",
                {
                    "externalDependencies": [
                        "rimraf",
                        "fast-glob",
                        "tar",
                        "lodash",
                        "npm-registry-fetch",
                        "yargs",
                        "diff",
                        "diff2html",
                        "colors"
                    ]
                }
            ],
            "outputs": ["{workspaceRoot}/.diff-output"],
            "executor": "nx:run-commands",
            "options": {
                "commands": ["node ./tasks/compare-compiled-output.js $NX_TASK_TARGET_PROJECT"]
            }
        },
        "build:clean": {
            "dependsOn": ["build", "clean"],
            "executor": "nx:noop"
        },
        "build": {
            "dependsOn": ["^build"],
            "inputs": ["core", "tools", { "externalDependencies": ["gulp", "postcss"] }],
            "outputs": ["{projectRoot}/dist"],
            "executor": "nx:run-commands",
            "options": {
                "cwd": "{projectRoot}",
                "commands": ["gulp"]
            }
        },
        "lint": {
            "inputs": ["core", "scripts", { "externalDependencies": ["stylelint", "eslint"] }],
            "executor": "nx:run-commands",
            "options": {
                "commands": [
                    "stylelint {projectRoot}/*.css {projectRoot}/themes/*.css",
                    "eslint --no-error-on-unmatched-pattern {projectRoot}/*.json {projectRoot}/stories/*.js"
                ]
            }
        },
        "format": {
            "inputs": ["core", "scripts", { "externalDependencies": ["stylelint", "eslint", "prettier"] }],
            "executor": "nx:run-commands",
            "options": {
                "commands": [
                    "stylelint {projectRoot}/*.css {projectRoot}/themes/*.css --fix",
                    "eslint --no-error-on-unmatched-pattern {projectRoot}/*.json {projectRoot}/stories/*.js --fix",
                    "prettier --no-error-on-unmatched-pattern --write {projectRoot}/**/*.{js,json,yml,md} {projectRoot}/*.{js,json,yml,md}"
                ]
            }
        },
        "profile": {
            "dependsOn": ["build"],
            "inputs": ["{projectRoot}/dist/index.css", { "externalDependencies": ["wallace"] }],
            "outputs": ["{workspaceRoot}/dist/profile.json"],
            "executor": "nx:run-commands",
            "options": {
                "commands": ["cat {projectRoot}/dist/index.css | wallace --json > {projectRoot}/dist/profile.json"]
            },
            "configurations": {
                "log": {
                    "commands": ["cat {projectRoot}/dist/index.css | wallace"]
                }
            }
        }
    }
}
