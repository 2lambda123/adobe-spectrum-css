{"version":3,"file":"dial-stories-dial-stories.9625f52f.iframe.bundle.js","mappings":";;;AAsBA;AAMA;AACA;AAIA;AAGA;;AAmBA;AAGA;AACA;;;AAGA;;;;;AAKA;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;AC7EA","sources":["webpack://@spectrum-css/preview/../components/dial/stories/template.js","webpack://@spectrum-css/preview/"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Dial\",\n\tsize = \"m\",\n\tlabel,\n\tisFocused = false,\n\tisDragged = false,\n\tisDisabled = false,\n\tmin = 0,\n\tmax = 100,\n\tcustomClasses = [],\n\tid,\n\t// ...globals\n}) => {\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--small`]: size === \"s\",\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\t@mousedown=${() => {\n\t\t\t\tif (isDisabled) return;\n\t\t\t\tdocument.body.classList.add(\"u-isGrabbing\");\n\t\t\t}}\n\t\t\t@mouseup=${() => {\n\t\t\t\tdocument.body.classList.remove(\"u-isGrabbing\");\n\t\t\t}}\n\t\t\t@mousemove=${(e) => {\n\t\t\t\tif (isDisabled) return;\n\t\t\t\tif (!document.body.classList.contains(\"u-isGrabbing\")) return;\n\n\t\t\t\tconst dial = e.target.closest(\".spectrum-Dial\");\n\t\t\t\tconst handle = dial.querySelector(\".spectrum-Dial-handle\");\n\t\t\t\tconst input = dial.querySelector(\"input\");\n\t\t\t\tconst min = -45;\n\t\t\t\tconst max = 225;\n\t\t\t\tconst dialOffsetLeft = dial.offsetLeft + dial.offsetParent.offsetLeft;\n\t\t\t\tvar x = Math.max(Math.min(e.x - dialOffsetLeft, dial.offsetWidth), 0);\n\t\t\t\tvar percent = (x / dial.offsetWidth) * 100;\n\t\t\t\tvar deg = percent * 0.01 * (max - min) + min;\n\t\t\t\thandle.style.transform = \"rotate(\" + deg + \"deg\" + \")\";\n\t\t\t\tinput.value = Math.round(\n\t\t\t\t\tpercent * 0.01 * (input.max - input.min) + input.min\n\t\t\t\t);\n\t\t\t}}\n\t\t>\n\t\t\t${when(\n\t\t\t\tlabel,\n\t\t\t\t() => html`<div class=\"${rootClass}-labelContainer\">\n\t\t\t\t\t<label id=\"dialLabel\" class=\"${rootClass}-label\" for=\"labeledDial\"\n\t\t\t\t\t\t>${label}</label\n\t\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"${rootClass}-value\"\n\t\t\t\t\t\trole=\"textbox\"\n\t\t\t\t\t\taria-readonly=\"true\"\n\t\t\t\t\t\taria-labelledby=\"dialLabel\"\n\t\t\t\t\t>\n\t\t\t\t\t\t${min}\n\t\t\t\t\t</div>\n\t\t\t\t</div>`\n\t\t\t)}\n\t\t\t<div class=\"${rootClass}-controls\">\n\t\t\t\t<div class=\"${rootClass}-handle ${isDragged ? \"is-dragged\": \"\"} ${isFocused ? \"is-focused\": \"\"}\" tabindex=\"0\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tclass=\"${rootClass}-input\"\n\t\t\t\t\t\tmin=\"${min}\"\n\t\t\t\t\t\tmax=\"${max}\"\n\t\t\t\t\t\tvalue=\"${min}\"\n\t\t\t\t\t\t@change=${(e) => {\n\t\t\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\t\t\tconst label = document.getElementById(\"dialLabel\");\n\t\t\t\t\t\t\tlabel.nextSibling.textContent = value;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}