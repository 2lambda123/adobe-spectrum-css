{"version":3,"file":"accordion-stories-accordion-stories.9d310614.iframe.bundle.js","mappings":";;AAyFA;AAQA;;;AAGA;;AA1EA;AAKA;AACA;;AAEA;;;AAQA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;AAUA;;AAEA;AACA;;AAEA;;;AAgCA;;AAjBA;;ACPA;AAmBA;;AAyBA","sources":["webpack://@spectrum-css/preview/../components/accordion/stories/template.js","webpack://@spectrum-css/preview/"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { repeat } from \"lit/directives/repeat.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const AccordionItem = ({\n\theading,\n\tcontent,\n\trootClass = \"spectrum-Accordion-item\",\n\tid,\n\tidx = 0,\n\tisDisabled = false,\n\tisOpen = false,\n\ticonSize = \"m\",\n\tdisableAll = false,\n\tcustomStyles = {},\n\t// customClasses = [],\n\t...globals\n}) => {\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t\"is-disabled\": isDisabled || disableAll,\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\trole=\"presentation\"\n\t\t\t@click=${(evt) => {\n\t\t\t\tif (isDisabled || !evt || !evt.target) return;\n\t\t\t\tconst closest = evt.target.closest(`.${rootClass}`);\n\t\t\t\tif (!closest) return;\n\t\t\t\tclosest.classList.toggle(\"is-open\");\n\t\t\t}}\n\t\t>\n\t\t\t<!-- WAI-ARIA 1.1: Item header is a <button> wrapped within a <h3> element, rather than a <div> element with role=\"tab\" -->\n\t\t\t<h3 class=\"${rootClass}Heading\">\n\t\t\t\t<!-- WAI-ARIA 1.1: Item header <button> uses aria-expanded attribute to indicate expanded state. -->\n\t\t\t\t<button\n\t\t\t\t\tclass=\"${rootClass}Header\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t?disabled=${isDisabled || disableAll}\n\t\t\t\t\tid=\"spectrum-accordion-item-${idx}-header\"\n\t\t\t\t\taria-controls=\"spectrum-accordion-item-${idx}-content\"\n\t\t\t\t\taria-expanded=\"${open ? \"true\" : \"false\"}\"\n\t\t\t\t>\n\t\t\t\t\t${heading}\n\t\t\t\t</button>\n\t\t\t\t<span class=\"${rootClass}IconContainer\">\n\t\t\t\t\t${Icon({\n\t\t\t\t\t\ticonName: \"ChevronRight\",\n\t\t\t\t\t\tsize: iconSize,\n\t\t\t\t\t\tcustomClasses: [`${rootClass}Indicator`],\n\t\t\t\t\t\t...globals,\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t</h3>\n\t\t\t<!-- WAI-ARIA 1.1: Item content role changed from \"tabpanel\" to \"region\" -->\n\t\t\t<div\n\t\t\t\tclass=\"${rootClass}Content\"\n\t\t\t\trole=\"region\"\n\t\t\t\tid=\"spectrum-accordion-item-${idx}-content\"\n\t\t\t\taria-labelledby=\"spectrum-accordion-item-${idx}-header\"\n\t\t\t>\n\t\t\t\t${content}\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n\nexport const Template = ({\n\trootClass = \"spectrum-Accordion\",\n\tsize = \"m\",\n\tdensity = \"regular\",\n\titems,\n\tid,\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tif (!items || !items.size) return html``;\n\n\treturn html`\n\t\t<div\n\t\t\tclass=\"${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--${density}`]:\n\t\t\t\t\ttypeof density !== \"undefined\" && density !== \"regular\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\"\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=\"region\"\n\t\t>\n\t\t\t${repeat(Array.from(items.keys()), (heading, idx) => {\n\t\t\t\tconst item = items.get(heading);\n\t\t\t\treturn AccordionItem({\n\t\t\t\t\trootClass: `${rootClass}-item`,\n\t\t\t\t\theading,\n\t\t\t\t\tidx,\n\t\t\t\t\ticonSize: `${size}`,\n\t\t\t\t\t...item,\n\t\t\t\t\t...globals,\n\t\t\t\t});\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}