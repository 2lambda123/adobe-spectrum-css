{"version":3,"file":"actionbar-stories-actionbar-stories.ddbec311.iframe.bundle.js","mappings":";;AAsBA;;AAYA;;AC2DA;;ACYA;;AAKA;AAMA;AAKA;AAIA;AAKA;;;;ACpFA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;;AAEA;AAQA;AAQA;;AAKA;;ACzDA;;AAWA;;AAmBA;;AC7BA;;AAQA;AACA;AACA;AACA;;AAEA;;AAOA;;ACRA;AAQA;AACA;AACA;;AAEA;;AASA;AClBA;;;AA4FA;AASA;;AAEA;AACA;;AAEA;AACA;;AAMA","sources":["webpack://@spectrum-css/preview/../components/actionbar/stories/template.js","webpack://@spectrum-css/preview/","webpack://@spectrum-css/preview/../components/actionbutton/stories/index.js","webpack://@spectrum-css/preview/../components/actionbutton/stories/template.js","webpack://@spectrum-css/preview/../components/actiongroup/stories/template.js","webpack://@spectrum-css/preview/../components/closebutton/stories/template.js","webpack://@spectrum-css/preview/../components/fieldlabel/stories/template.js","webpack://@spectrum-css/preview/../components/popover/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { Template as ActionGroup } from \"@spectrum-css/actiongroup/stories/template.js\";\nimport { Template as CloseButton } from \"@spectrum-css/closebutton/stories/template.js\";\nimport { Template as FieldLabel } from \"@spectrum-css/fieldlabel/stories/template.js\";\nimport { Template as Popover } from \"@spectrum-css/popover/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionBar\",\n\tsize = \"m\",\n\tisOpen = true,\n\tisEmphasized = false,\n\tisSticky = false,\n\tisFixed = false,\n\tisFlexible = false,\n\tcustomClasses = [],\n\t...globals\n}) => html`\n\t<div\n\t\tclass=${classMap({\n\t\t\t[rootClass]: true,\n\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t[`${rootClass}--sticky`]: isSticky,\n\t\t\t[`${rootClass}--fixed`]: isFixed,\n\t\t\t[`${rootClass}--flexible`]: isFlexible,\n\t\t\t\"is-open\": isOpen,\n\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t})}\n\t>\n\t\t${Popover({\n\t\t\t...globals,\n\t\t\tcustomClasses: [`${rootClass}-popover`],\n\t\t\tisOpen,\n\t\t\tcontent: [\n\t\t\t\tCloseButton({\n\t\t\t\t\t...globals,\n\t\t\t\t\tlabel: \"Clear selection\",\n\t\t\t\t\tstaticColor: isEmphasized ? \"white\" : undefined,\n\t\t\t\t}),\n\t\t\t\tFieldLabel({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize: \"s\",\n\t\t\t\t\tlabel: \"2 Selected\",\n\t\t\t\t}),\n\t\t\t\tActionGroup({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize: \"m\",\n\t\t\t\t\tareQuiet: true,\n\t\t\t\t\tstaticColors: isEmphasized ? \"white\" : undefined,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonName: \"Edit\",\n\t\t\t\t\t\t\tlabel: \"Edit\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonName: \"Copy\",\n\t\t\t\t\t\t\tlabel: \"Copy\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonName: \"Delete\",\n\t\t\t\t\t\t\tlabel: \"Delete\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t],\n\t\t})}\n\t</div>\n`;\n",null,"import { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport { Template } from \"./template\";\n\nimport { default as IconStories } from \"@spectrum-css/icon/stories/icon.stories.js\";\n\nexport const argTypes = {\n\tsize: {\n\t\tname: \"Size\",\n\t\ttype: { name: \"string\", required: true },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\toptions: [\"xs\", \"s\", \"m\", \"l\", \"xl\"],\n\t\tcontrol: \"select\",\n\t},\n\ticonName: {\n\t\t...(IconStories?.argTypes?.iconName ?? {}),\n\t\tif: false,\n\t},\n\tlabel: {\n\t\tname: \"Label\",\n\t\ttype: { name: \"string\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Content\",\n\t\t},\n\t\tcontrol: { type: \"text\" },\n\t},\n\tisQuiet: {\n\t\tname: \"Quiet styling\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisEmphasized: {\n\t\tname: \"Emphasized styling\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisDisabled: {\n\t\tname: \"Disabled\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"State\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisSelected: {\n\t\tname: \"Selected\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"State\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\thideLabel: {\n\t\tname: \"Hide label\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\thasPopup: {\n\t\tname: \"Has popup\",\n\t\tdescription: \"True if the button triggers a popup action.\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tstaticColor: {\n\t\tname: \"StaticColor\",\n\t\ttype: { name: \"string\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\toptions: [\"white\", \"black\"],\n\t\tcontrol: \"select\",\n\t},\n};\n\nexport const ActionButtons = ({\n\tstaticColor,\n\t...args\n}) => {\n\treturn html`\n\t\t<div\n      \t\tstyle=${ifDefined(styleMap({\n\t\t\t\tpadding: \"1rem\",\n\t\t\t\tbackgroundColor: staticColor === \"white\" ? \"rgb(15, 121, 125)\" : staticColor === \"black\" ? \"rgb(181, 209, 211)\" : undefined,\n\t\t\t}))}\n\t\t>\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\tlabel: \"More\",\n\t\t\t\ticonName: undefined,\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\tlabel: \"More\",\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\thasPopup: true,\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\tlabel: \"More and this text should truncate\",\n\t\t\t\tcustomStyles: { \"max-inline-size\": \"100px\"},\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport \"../index.css\";\n\n/**\n * @todo load order should not influence the icon size but it is; fix this\n*/\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionButton\",\n\tsize = \"m\",\n\ticonName,\n\tlabel,\n\tisQuiet = false,\n\tisSelected = false,\n\tisEmphasized = false,\n\tisDisabled = false,\n\thasPopup = false,\n\thideLabel = false,\n\tstaticColor,\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tcustomIconClasses = [],\n\tonclick,\n\tid,\n\trole,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<button\n\t\t\taria-label=${ifDefined(label)}\n\t\t\taria-haspopup=${hasPopup ? \"true\" : \"false\"}\n\t\t\taria-pressed=${isSelected ? \"true\" : \"false\"}\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t[`is-disabled`]: isDisabled,\n\t\t\t\t[`is-selected`]: isSelected,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=${ifDefined(role)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${when(hasPopup, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: \"CornerTriangle100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-hold`],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(iconName, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`, ...customIconClasses],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(\n\t\t\t\tlabel && !hideLabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</button>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionGroup\",\n\tsize = \"m\",\n\tareQuiet = false,\n\tareEmphasized = false,\n\tvertical = false,\n\tcompact = false,\n\tjustified = false,\n\tstaticColors,\n\tcontent = [],\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: areQuiet,\n\t\t\t\t[`${rootClass}--vertical`]: vertical,\n\t\t\t\t[`${rootClass}--compact`]: compact,\n\t\t\t\t[`${rootClass}--justified`]: justified,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t>\n\t\t\t${content.map((item) => {\n\t\t\t\tswitch (typeof item) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\treturn ActionButton({\n\t\t\t\t\t\t\t...globals,\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\ticonName: item.iconName,\n\t\t\t\t\t\t\tisQuiet: areQuiet || item.isQuiet,\n\t\t\t\t\t\t\tisEmphasized: areEmphasized || item.isEmphasized,\n\t\t\t\t\t\t\tstaticColor: staticColors ?? item.staticColor,\n\t\t\t\t\t\t\tcustomClasses: [`${rootClass}-item`],\n\t\t\t\t\t\t});\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\treturn item({ ...globals, size });\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { upperCase, lowerCase, capitalize } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-CloseButton\",\n\tsize = \"m\",\n\tlabel = \"Close\",\n\tstaticColor,\n\tisDisabled = false,\n\tcustomClasses = [],\n\tid,\n\tonclick,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<button\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${upperCase(size)}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\taria-label=\"close\"\n\t\t\tid=${ifDefined(id)}\n\t\t\tlabel=${ifDefined(label)}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${Icon({\n\t\t\t\t...globals,\n\t\t\t\tsize,\n\t\t\t\ticonName: \"Cross\",\n\t\t\t\tcustomClasses: [`${rootClass}-UIIcon`],\n\t\t\t})}\n\t\t</button>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-FieldLabel\",\n\tcustomClasses = [],\n\tsize = \"m\",\n\tlabel,\n\tid,\n\tforInput,\n\talignment,\n\tisDisabled,\n\tisRequired,\n\tstyle = {},\n\t...globals\n}) => {\n\tif (!label) {\n\t\tconsole.warn(\"FieldLabel: please provide a label for the field label.\");\n\t\treturn html``;\n\t}\n\n\tlet iconName = \"Asterisk100\";\n\tswitch (size) {\n\t\tcase \"s\":\n\t\t\ticonName = \"Asterisk100\";\n\t\t\tbreak;\n\t\tcase \"l\":\n\t\t\ticonName = \"Asterisk200\";\n\t\t\tbreak;\n\t\tcase \"xl\":\n\t\t\ticonName = \"Asterisk300\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ticonName = \"Asterisk100\";\n\t}\n\n\treturn html`\n\t\t<label\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--${alignment}`]: typeof alignment !== \"undefined\",\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(style))}\n\t\t\tid=${ifDefined(id)}\n\t\t\tfor=${ifDefined(forInput)}\n\t\t>\n\t\t\t${label}${isRequired\n\t\t\t\t? Icon({\n\t\t\t\t\t\t...globals,\n\t\t\t\t\t\tsize,\n\t\t\t\t\t\ticonName,\n\t\t\t\t\t\tcustomClasses: [`${rootClass}-UIIcon`, `${rootClass}-requiredIcon`],\n\t\t\t\t  })\n\t\t\t\t: \"\"}\n\t\t</label>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { useArgs } from \"@storybook/client-api\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Popover\",\n\tsize = \"m\",\n\tisOpen = false,\n\twithTip = false,\n\tposition = \"top\",\n\tcustomClasses = [],\n\tid = \"popover-1\",\n\ttestId,\n\ttriggerId = \"trigger\",\n\tcustomStyles = {\n\t\t\"inset-inline-start\": \"0px\",\n\t\t\"inset-block-start\": \"0px\",\n\t},\n\ttrigger,\n\tcontent = [],\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\n\tif (content.length === 0) {\n\t\tconsole.warn(\"Popover: No content provided.\");\n\t\treturn html``;\n\t}\n\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\tconst nestedPopover = id === 'popover-nested' || id === 'popover-nested-2';\n\n\treturn html`\n\t\t${when(typeof trigger === \"function\", () => trigger({\n\t\t\t...globals,\n\t\t\tisSelected: isOpen,\n\t\t\tisOpen: nestedPopover ?? true,\n\t\t\tonclick: () => {\n\t\t\t\t// Nested popover is static and open, so we don't need transforms for it\n\t\t\t\t!nestedPopover &&\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// No trigger? Nothing to do.\n\t\t\t\t\tif (!trigger || !position) return [];\n\n\t\t\t\t\t// Get trigger element and popover\n\t\t\t\t\tconst element = document.querySelector(`#${triggerId}`);\n\n\t\t\t\t\tif (!element) return [];\n\t\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\t\tconst popover = document.querySelector(`#${id}`);\n\t\t\t\t\tif (!popover) return [];\n\n\t\t\t\t\tconst transforms = [];\n\t\t\t\t\tconst additionalStyles = {};\n\t\t\t\t\tconst triggerXCenter = (rect.left + rect.right) / 2;\n\t\t\t\t\tconst triggerYCenter = (rect.top + rect.bottom) / 2;\n\t\t\t\t\tconst popWidth = popover.offsetWidth ?? 0;\n\t\t\t\t\tconst popHeight = popover.offsetHeight ?? 0;\n\t\t\t\t\tconst textDir = getComputedStyle(document.querySelector('html')).direction;\n\t\t\t\t\tlet x, y;\n\t\t\t\t\tlet xOffset = \"+ 0px\";\n\t\t\t\t\tlet yOffset = \"+ 0px\";\n\t\t\t\t\tif (position.includes(\"top\") || position.includes(\"bottom\") && !(position.includes(\"-top\") || position.includes(\"-bottom\"))) {\n\t\t\t\t\t\tx = triggerXCenter - (popWidth > 0 ? popWidth / 2 : popWidth);\n\t\t\t\t\t}\n\t\t\t\t\tif (position.includes(\"left\") || position.includes(\"right\")) {\n\t\t\t\t\t\ty = triggerYCenter - (popHeight > 0 ? popHeight / 2 : popHeight);\n\t\t\t\t\t}\n\t\t\t\t\tif (position.includes(\"top\") && !position.includes(\"-top\")) {\n\t\t\t\t\t\ty = rect.top - popHeight;\n\t\t\t\t\t\tyOffset = withTip\n\t\t\t\t\t\t\t? \"- (var(--spectrum-popover-pointer-height) + var(--spectrum-popover-animation-distance) - 1px)\"\n\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t} else if (position.includes(\"bottom\") && !position.includes(\"-bottom\")) {\n\t\t\t\t\t\ty = rect.bottom;\n\t\t\t\t\t\tyOffset = \"+ (var(--spectrum-popover-animation-distance))\";\n\t\t\t\t\t} else if (position.includes(\"left\")) {\n\t\t\t\t\t\tif (textDir == 'rtl') {\n\t\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\t\txOffset = withTip ? \"+ 0px\" : \"+ var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\t\txOffset = withTip\n\t\t\t\t\t\t\t\t? \"- ((var(--spectrum-popover-pointer-width) / 2) + var(--spectrum-popover-animation-distance) - 2px)\"\n\t\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (position.includes(\"right\")) {\n\t\t\t\t\t\tif (textDir == 'rtl') {\n\t\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\t\txOffset = withTip\n\t\t\t\t\t\t\t\t? \"- ((var(--spectrum-popover-pointer-width) / 2) + var(--spectrum-popover-animation-distance) - 2px)\"\n\t\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\t\txOffset = withTip ? \"+ 0px\" : \"+ var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (x) transforms.push(`translateX(calc(var(--flow-direction) * calc(${parseInt(x, 10)}px ${xOffset})))`);\n\t\t\t\t\tif (y) transforms.push(`translateY(calc(${y}px ${yOffset}))`);\n\n\t\t\t\t\t// Add start and end styles\n\t\t\t\t\tif (position === \"top-start\" || position === \"bottom-start\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(\" + (popWidth / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t} else if (position === \"top-end\" || position === \"bottom-end\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(-1 *\" + (popWidth / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t} else if (position === \"left-top\" || position === \"right-top\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(\" + (popHeight / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t} else if (position === \"left-bottom\" || position === \"right-bottom\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(-1 *\" + (popHeight / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateArgs({\n\t\t\t\t\t\tisOpen: !isOpen,\n\t\t\t\t\t\tcustomStyles: {\n\t\t\t\t\t\t\t...customStyles,\n\t\t\t\t\t\t\ttransform: transforms.join(\" \"),\n\t\t\t\t\t\t\t...additionalStyles,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, 100)\n\t\t\t\t}\n\t\t}))}\n\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--withTip`]: withTip,\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\trole=\"presentation\"\n\t\t\tid=${ifDefined(id)}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t>\n\t\t\t${content.map((c) => (typeof c === \"function\" ? c({}) : c))}\n\t\t\t${withTip\n\t\t\t\t? position && [\"top\", \"bottom\"].some((e) => position.startsWith(e))\n\t\t\t\t\t? html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 16 9\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 17,-1\"></svg>`\n\t\t\t\t\t: html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 9 16\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 -1,17\"></svg>`\n\t\t\t\t: \"\"}\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}