{"version":3,"file":"coachmark-stories-coachmark-stories.76572c56.iframe.bundle.js","mappings":";;AAqBA;AAIA;AAaA;AAEA;AACA;;;;AAKA;;;;;;AAuBA;AACA;AACA;;;;;;AC9BA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;;AAEA;;AChDA;;AAQA","sources":["webpack://@spectrum-css/preview/../components/coachmark/stories/template.js","webpack://@spectrum-css/preview/../components/button/stories/template.js","webpack://@spectrum-css/preview/../components/buttongroup/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { Template as ActionMenu } from \"@spectrum-css/actionmenu/stories/template.js\";\nimport { Template as ButtonGroup } from \"@spectrum-css/buttongroup/stories/template.js\";\n\nimport { Template as Popover } from \"@spectrum-css/popover/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-CoachMark\",\n\tvariant,\n\tisCoachMarkOpen,\n\tcustomClasses,\n\thasActionMenu = false,\n\thasPagination,\n\thasImage,\n\tisOpen = true,\n\t...globals\n}) => html`\n\t<div class=${classMap({\n\t\t[rootClass]: true,\n\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t})}>\n\t\t${Popover({\n\t\t\t...globals,\n\t\t\tnested: true,\n\t\t\ttestId: 'popover-nested',\n\t\t\tid: 'popover-nested',\n\t\t\ttriggerId: 'trigger-nested',\n\t\t\tcustomStyles: {\n\t\t\t\t\"margin-inline-start\": \"0px\",\n\t\t\t},\n\t\t\tcustomClasses: [`${rootClass}-popover`],\n\t\t\tisOpen: true,\n\t\t\tcontent: [\n\t\t\t\thtml`\n\t\t\t\t${hasImage ? html\n\t\t\t\t\t`<div class=\"${rootClass}-image-wrapper\">\n\t\t\t\t\t<img class=\"${rootClass}-image\" src=\"example-card-landscape.png\" />\n\t\t\t\t</div>`\n\t\t\t\t\t: ''}\n\t\t\t\t<div class=\"spectrum-CoachMark-header\">\n\t\t\t\t\t<div class=\"spectrum-CoachMark-title\">Try playing with a pixel brush</div>\n\t\t\t\t\t<div class=\"spectrum-CoachMark-action-menu\">\n\t\t\t\t\t${hasActionMenu ? ActionMenu({\n\t\t\t\t\t\tisOpen,\n\t\t\t\t\t\tpopoverPosition: \"right\",\n\t\t\t\t\t\tpopoverTestId: 'popover-nested-2',\n\t\t\t\t\t\tpopoverId: 'popover-nested-2',\n\t\t\t\t\t\tpopoverTriggerId: \"trigger-nested-2\",\n\t\t\t\t\t\tcustomStyles: { \"margin-block-start\": \"30px\", \"margin-inline-start\": \"-32px\" },\n\t\t\t\t\t\ticonName: 'More',\n\t\t\t\t\t\tsize: globals.scale === \"large\" ? \"s\" : \"m\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Skip tour\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Reset tour\",\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t}) : \"\"}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"spectrum-CoachMark-content\">\n\t\t\t\t\tPixel brushes use pixels to create brush strokes, just like in other design and drawing tools. Start drawing, and zoom in to see the pixels in each stroke.\n\t\t\t\t</div>\n\t\t\t\t<div class=\"${rootClass}-footer\">\n\t\t\t\t${hasPagination ? html`<div class=\"spectrum-CoachMark-step\"><bdo dir=\"ltr\">2 of 8</bdo></div>` : ''}\n\t\t\t\t${ButtonGroup({\n\t\t\t\t\tcustomClasses: globals.scale === \"large\" ? [`${rootClass}-buttongroup--mobile`] : [`${rootClass}-buttongroup`],\n\t\t\t\t\tsize: globals.scale === \"large\" ? \"s\" : \"m\",\n\t\t\t\t\titems: globals.scale === \"large\" ?\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvariant: \"secondary\",\n\t\t\t\t\t\t\ttreatment: \"outline\",\n\t\t\t\t\t\t\thideLabel: true,\n\t\t\t\t\t\t\ticonName: \"ChevronLeft75\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvariant: \"primary\",\n\t\t\t\t\t\t\ttreatment: \"outline\",\n\t\t\t\t\t\t\tlabel: \"Next\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t\t:\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvariant: \"secondary\",\n\t\t\t\t\t\t\ttreatment: \"outline\",\n\t\t\t\t\t\t\tlabel: \"Previous\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvariant: \"primary\",\n\t\t\t\t\t\t\ttreatment: \"outline\",\n\t\t\t\t\t\t\tlabel: \"Next\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t],\n\t\t})}\n\t</div>\n`;\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n  rootClass = \"spectrum-Button\",\n  id,\n  customClasses = [],\n  customStyles = {},\n  size = \"m\",\n  label,\n  hideLabel = false,\n  iconName,\n  iconAfterLabel = false,\n  variant,\n  staticColor,\n  treatment,\n  onclick,\n  isDisabled = false,\n  ariaExpanded,\n  ariaControls,\n  ...globals\n}) => {\n\tconst { express } = globals;\n\ttry {\n\t\tif (express) import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n  return html`\n    <button\n      class=${classMap({\n        [rootClass]: true,\n        [`${rootClass}--${treatment}`]: typeof treatment !== \"undefined\",\n        [`${rootClass}--${variant}`]: typeof variant !== \"undefined\",\n        [`${rootClass}--size${size?.toUpperCase()}`]: typeof size !== \"undefined\",\n        [`${rootClass}--static${capitalize(lowerCase(staticColor))}`]: typeof staticColor !== \"undefined\",\n        [`${rootClass}--iconOnly`]: hideLabel,\n        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n      })}\n      id=${ifDefined(id)}\n      style=${ifDefined(styleMap(customStyles))}\n      ?disabled=${isDisabled}\n      @click=${onclick}\n      aria-label=${ifDefined(hideLabel ? iconName : undefined)}\n      aria-expanded=${ifDefined(ariaExpanded?.toString())}\n      aria-controls=${ifDefined(ariaControls)}\n    >\n      ${when(iconName && !iconAfterLabel, () => Icon({ ...globals, iconName, size }))}\n      ${when(label && !hideLabel,\n        () => html`<span class=${`${rootClass}-label`}>${label}</span>`\n      )}\n      ${when(iconName && iconAfterLabel, () => Icon({ ...globals, iconName, size }))}\n    </button>\n  `;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { Template as Button } from \"@spectrum-css/button/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ButtonGroup\",\n\tcustomClasses = [],\n\tsize = \"m\",\n\titems = [],\n\tvertical = false,\n\t...globals\n}) => html`\n\t<div\n\t\tclass=${classMap({\n\t\t\t[rootClass]: true,\n\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t[`${rootClass}--vertical`]: vertical,\n\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t})}\n\t>\n\t\t${items.map((item) =>\n\t\t\tButton({\n\t\t\t\t...globals,\n\t\t\t\t...item,\n\t\t\t\tsize,\n\t\t\t\tcustomClasses: [`${rootClass}-item`],\n\t\t\t})\n\t\t)}\n\t</div>\n`;\n"],"names":[],"sourceRoot":""}