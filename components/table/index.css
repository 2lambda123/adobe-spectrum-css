/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-Table {
  /* Size and Spacing */
  --spectrum-table-min-header-height: var(--spectrum-component-height-100);
  --spectrum-table-header-top-to-text: var(--spectrum-table-column-header-row-top-to-text-medium);
  --spectrum-table-header-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-medium);

  --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-regular);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-regular);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-regular);

  --spectrum-table-cell-inline-space: var(--spectrum-table-edge-to-content);

  --spectrum-table-border-width: var(--spectrum-table-border-divider-width);
  --spectrum-table-border-radius: var(--spectrum-corner-radius-100);

  --spectrum-table-sort-icon-to-text: var(--spectrum-text-to-visual-100);
  --spectrum-table-menu-icon-to-text: var(--spectrum-text-to-visual-100);

  /* Typography */
  --spectrum-table-header-font-family: var(--spectrum-sans-font-family-stack);
  --spectrum-table-header-font-weight: var(--spectrum-bold-font-weight);
  --spectrum-table-header-font-style: var(--spectrum-default-font-style);
  --spectrum-table-header-font-size: var(--spectrum-font-size-100);
  --spectrum-table-header-line-height: var(--spectrum-line-height-100);

  --spectrum-table-row-font-family: var(--spectrum-sans-font-family-stack);
  --spectrum-table-row-font-weight: var(--spectrum-regular-font-weight);
  --spectrum-table-row-font-style: var(--spectrum-default-font-style);
  --spectrum-table-row-font-size: var(--spectrum-font-size-100);
  --spectrum-table-row-line-height: var(--spectrum-line-height-100);

  --spectrum-table-summary-row-font-family: var(--spectrum-sans-font-family-stack);
  --spectrum-table-summary-row-font-weight: var(--spectrum-regular-font-weight);
  --spectrum-table-summary-row-font-style: var(--spectrum-default-font-style);
  --spectrum-table-summary-row-font-size: var(--spectrum-font-size-100);
  --spectrum-table-summary-row-line-height: var(--spectrum-line-height-100);

  /* General Colors */
  --spectrum-table-border-color: var(--spectrum-gray-300);

  --spectrum-table-header-background-color: var(--spectrum-transparent-white-100);
  --spectrum-table-header-text-color: var(--spectrum-body-color);

  --spectrum-table-row-background-color: var(--spectrum-gray-50);
  --spectrum-table-row-background-color-hover: var(--spectrum-table-row-hover-color);
  --spectrum-table-row-text-color: var(--spectrum-neutral-content-color-default);

  --spectrum-table-summary-row-background-color: var(--spectrum-gray-200);
  --spectrum-table-summary-row-text-color: var(--spectrum-neutral-content-color-default);

  --spectrum-table-sort-icon-color: var(--spectrum-neutral-subdued-content-color-default);
  --spectrum-table-menu-icon-color: var(--spectrum-neutral-subdued-content-color-default);

  /* Row Selection */
  --spectrum-table-checkbox-to-text: var(--spectrum-table-checkbox-to-text);

  --spectrum-table-header-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-medium);
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-regular);

  --spectrum-table-selected-row-background-color: var(--spectrum-table-selected-row-background-color);
  --spectrum-table-selected-row-background-color-non-emphasized: var(--spectrum-table-selected-row-background-color-non-emphasized);

  --spectrum-table-transition-duration: var(--spectrum-animation-duration-100);

  /* Section Header Row */

  /* Collapsible */

  /* Thumbnails */
}

/********* T-SHIRT SIZES (Regular Density) *********/

.spectrum-Table--sizeS {
  /* Size and Spacing */
  --spectrum-table-min-header-height: var(--spectrum-component-height-100);
  --spectrum-table-header-top-to-text: var(--spectrum-table-column-header-row-top-to-text-small);
  --spectrum-table-header-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-small);

  --spectrum-table-min-row-height: var(--spectrum-table-row-height-small-regular);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-small-regular);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-small-regular);

  --spectrum-sort-icon-to-text: var(--spectrum-text-to-visual-100);
  --spectrum-menu-icon-to-text: var(--spectrum-text-to-visual-100);

  /* Typography */
  --spectrum-table-header-font-size: var(--spectrum-font-size-75);
  --spectrum-table-row-font-size: var(--spectrum-font-size-75);
  --spectrum-table-summary-row-font-size: var(--spectrum-font-size-75);

  /* Row Selection */
  --spectrum-table-header-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-small);
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-small-regular);

  /* Section Header Row */

  /* Collapsible */

  /* Thumbnails */
}

.spectrum-Table--sizeM {
  /* Size and Spacing */
  --spectrum-table-min-header-height: var(--spectrum-component-height-100);
  --spectrum-table-header-top-to-text: var(--spectrum-table-column-header-row-top-to-text-medium);
  --spectrum-table-header-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-medium);

  --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-regular);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-regular);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-regular);

  --spectrum-sort-icon-to-text: var(--spectrum-text-to-visual-100);
  --spectrum-menu-icon-to-text: var(--spectrum-text-to-visual-100);

  /* Typography */
  --spectrum-table-header-font-size: var(--spectrum-font-size-100);
  --spectrum-table-row-font-size: var(--spectrum-font-size-100);
  --spectrum-table-summary-row-font-size: var(--spectrum-font-size-100);

  /* Row Selection */
  --spectrum-table-header-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-medium);
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-regular);

  /* Section Header Row */

  /* Collapsible */

  /* Thumbnails */
}

.spectrum-Table--sizeL {
  /* Size and Spacing */
  --spectrum-table-min-header-height: var(--spectrum-component-height-200);
  --spectrum-table-header-top-to-text: var(--spectrum-table-column-header-row-top-to-text-large);
  --spectrum-table-header-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-large);

  --spectrum-table-min-row-height: var(--spectrum-table-row-height-large-regular);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-large-regular);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-large-regular);

  --spectrum-sort-icon-to-text: var(--spectrum-text-to-visual-200);
  --spectrum-menu-icon-to-text: var(--spectrum-text-to-visual-200);

  /* Typography */
  --spectrum-table-header-font-size: var(--spectrum-font-size-200);
  --spectrum-table-row-font-size: var(--spectrum-font-size-200);
  --spectrum-table-summary-row-font-size: var(--spectrum-font-size-200);

  /* Row Selection */
  --spectrum-table-header-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-large);
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-large-regular);

  /* Section Header Row */

  /* Collapsible */

  /* Thumbnails */
}

.spectrum-Table--sizeXL {
  /* Size and Spacing */
  --spectrum-table-min-header-height: var(--spectrum-component-height-300);
  --spectrum-table-header-top-to-text: var(--spectrum-table-column-header-row-top-to-text-extra-large);
  --spectrum-table-header-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-extra-large);

  --spectrum-table-min-row-height: var(--spectrum-table-row-height-extra-large-regular);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-extra-large-regular);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-extra-large-regular);

  --spectrum-sort-icon-to-text: var(--spectrum-text-to-visual-300);
  --spectrum-menu-icon-to-text: var(--spectrum-text-to-visual-300);

  /* Typography */
  --spectrum-table-header-font-size: var(--spectrum-font-size-300);
  --spectrum-table-row-font-size: var(--spectrum-font-size-300);
  --spectrum-table-summary-row-font-size: var(--spectrum-font-size-300);

  /* Row Selection */
  --spectrum-table-header-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-extra-large);
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-extra-large-regular);

  /* Section Header Row */

  /* Collapsible */

  /* Thumbnails */
}

/********* VARIANTS *********/

.spectrum-Table--compact {
  /* Size and Spacing */
  --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-compact);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-compact);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-compact);

  /* Row Selection */
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-compact);

  &.spectrum-Table--sizeS {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-small-compact);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-small-compact);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-small-compact);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-small-compact);
  }

  &.spectrum-Table--sizeM {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-compact);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-compact);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-compact);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-compact);
  }

  &.spectrum-Table--SizeL {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-large-compact);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-large-compact);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-large-compact);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-large-compact);
  }

  &.spectrum-Table--SizeXL {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-extra-large-compact);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-extra-large-compact);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-extra-large-compact);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-extra-large-compact);
  }
}

.spectrum-Table--spacious {
  /* Size and Spacing */
  --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-spacious);
  --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-spacious);
  --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-spacious);

  /* Row Selection */
  --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-spacious);

  &.spectrum-Table--sizeS {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-small-spacious);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-small-spacious);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-small-spacious);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-small-spacious);
  }

  &.spectrum-Table--sizeM {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-medium-spacious);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-spacious);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-spacious);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium-spacious);
  }

  &.spectrum-Table--SizeL {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-large-spacious);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-large-spacious);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-large-spacious);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-large-spacious);
  }

  &.spectrum-Table--SizeXL {
    /* Size and Spacing */
    --spectrum-table-min-row-height: var(--spectrum-table-row-height-extra-large-spacious);
    --spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-extra-large-spacious);
    --spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-extra-large-spacious);

    /* Row Selection */
    --spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-extra-large-spacious);
  }
}

.spectrum-Table--quiet {
  --spectrum-table-border-radius: 0;
}

/********* REGULAR / DEFAULT *********/

.spectrum-Table {
  border-collapse: separate;
  border-spacing: 0;
}

.spectrum-Table-sortedIcon {
  display: none;
  margin-inline-start: var(--mod-table-sort-icon-to-text, var(--spectrum-table-sort-icon-to-text));
  vertical-align: middle;
  transition: transform var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;

  &:first-child {
    margin-inline-start: 0;
    margin-inline-end: var(--mod-table-sort-icon-to-text, var(--spectrum-table-sort-icon-to-text));
  }
}

.spectrum-Table-headCell {
  box-sizing: border-box;
  text-align: start;

  font-size: var(--mod-table-header-font-size, var(--spectrum-table-header-font-size));
  font-weight: var(--mod-table-header-font-weight, var(--spectrum-table-header-font-weight));
  line-height: var(--mod-table-header-line-height, var(--spectrum-table-header-line-height));

  min-block-size: var(--mod-table-min-header-height, var(--spectrum-table-min-header-height));
  padding-block: var(--mod-table-header-top-to-text, var(--spectrum-table-header-top-to-text)) var(--mod-table-header-bottom-to-text-to-text, var(--spectrum-table-header-bottom-to-text-to-text));
  padding-inline: var(--mod-table-cell-inline-space, var(--spectrum-table-cell-inline-space));

  transition: color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;
  cursor: default;
  outline: 0;
  border-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));

  &.is-sortable {
    cursor: pointer;
  }

  &.is-sorted-asc,
  &.is-sorted-desc {
    .spectrum-Table-sortedIcon {
      display: inline-block;
      /* offset icon because it's not properly aligned */
      margin-block-start: calc(var(--spectrum-global-dimension-size-25) * -1);
    }
  }

  &.is-sorted-asc {
    .spectrum-Table-sortedIcon {
      transform: rotateZ(-90deg);
    }
  }
}

.spectrum-Table-cell--alignCenter {
  text-align: center;
}

.spectrum-Table-cell--alignRight {
  text-align: end;
}

/* Placeholder selector for shared drop target overlay. */
%drop-target {
  &::before {
    content: '';
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    inset-block-end: 0;
    inset-inline-end: 0;
    z-index: 1;
  }
}

.spectrum-Table-body {
  position: relative;
  border-width: var(--mod-table-border-width, var(--spectrum-table-border-width));
  border-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
  overflow: auto;
  vertical-align: var(--spectrum-table-regular-cell-vertical-alignment);

  &.is-drop-target {
    @inherit: %drop-target;
  }
}

/* The tbody tag doesn't allow setting a border-radius, so these hacks are to make that work
   by putting it on the individual cells instead. */
.spectrum-Table:not(.spectrum-Table--quiet) {
  tbody.spectrum-Table-body {
    border-width: var(--mod-table-border-width, var(--spectrum-table-border-width));
    border-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));

    .spectrum-Table-row:first-child .spectrum-Table-cell:first-child {
      border-start-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
    }

    .spectrum-Table-row:first-child .spectrum-Table-cell:last-child {
      border-start-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
    }

    .spectrum-Table-row:last-child .spectrum-Table-cell:first-child {
      border-end-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
    }

    .spectrum-Table-row:last-child .spectrum-Table-cell:last-child {
      border-end-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
    }
  }
}

.spectrum-Table-cell {
  box-sizing: border-box;
  font-size: var(--mod-table-row-font-size, var(--spectrum-table-row-font-size));
  font-weight: var(--mod-table-row-font-weight, var(--spectrum-table-row-font-weight));
  line-height: var(--mod-table-row-line-height, var(--spectrum-table-row-line-height));
  padding-block: var(--mod-table-row-top-to-text, var(--spectrum-table-row-top-to-text)) var(--mod-table-row-bottom-to-text, var(--spectrum-table-row-bottom-to-text));
  padding-inline: var(--mod-table-edge-to-content, var(--spectrum-table-edge-to-content));
  /* Subtract top/bottom padding for this value to be correct in this implementation */
  min-block-size: calc(
    var(--spectrum-table-min-row-height) - 
    (var(--mod-table-row-top-to-text, var(--spectrum-table-row-top-to-text)) + var(--mod-table-row-bottom-to-text, var(--spectrum-table-row-bottom-to-text)))
  );
}

.spectrum-Table-cell,
.spectrum-Table-headCell {
  position: relative;

  &:focus-ring,
  &.is-focused {
    outline: none;

    &::before {
      content: '';

      /* Float above border */
      z-index: 1;
      position: absolute;

      inset-block-start: 0;
      inset-inline-end: 0;
      inset-block-end: 0;
      inset-inline-start: 0;

      border-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-border-radius)) - 1px);
    }
  }
}

.spectrum-Table-headCell {
  &:focus-ring,
  &.is-focused {
    &::before {
      inset-block-start: var(--mod-table-border-width, var(--spectrum-table-border-width));
      inset-inline-end: var(--mod-table-border-width, var(--spectrum-table-border-width));
      inset-block-end: var(--mod-table-border-width, var(--spectrum-table-border-width));
      inset-inline-start: var(--mod-table-border-width, var(--spectrum-table-border-width));
    }
  }
}

.spectrum-Table-cell--divider {
  border-inline-end-width: var(--mod-table-border-width, var(--spectrum-table-border-width));
}

.spectrum-Table-row {
  position: relative;
  cursor: pointer;
  transition: background-color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;

  &:focus {
    outline: 0;
  }

  &.is-drop-target {
    @inherit: %drop-target;
  }
}

.spectrum-Table > .spectrum-Table-body > .spectrum-Table-row:last-of-type {
  border-block-end-style: none;
}

.spectrum-Table--quiet {
  .spectrum-Table-body {
    border-radius: 0;
  }

  .spectrum-Table-body,
  .spectrum-Table-row {
    &.is-drop-target {
      &::before {
        border-radius: 0;
      }
    }
  }
}

.spectrum-Table-checkboxCell {
  padding-inline-end: calc(var(--mod-table-checkbox-to-text, var(--spectrum-table-checkbox-to-text)) - var(--mod-table-edge-to-content, var(--spectrum-table-edge-to-content)));
  /* have to eliminate vertical padding to allow proper vertical alignment */
  padding-block-start: 0px;
  padding-block-end: 0px;
  vertical-align: var(--spectrum-table-regular-cell-checkbox-vertical-alignment);
}

.spectrum-Table-checkbox {
  vertical-align: super;
}






/********* VARIANTS *********/

.spectrum-Table--compact {
  .spectrum-Table-sortedIcon {
    display: none;
    margin-inline-start: var(--spectrum-table-compact-header-sort-icon-gap);
    vertical-align: middle;
    transition: transform var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;
  }

  .spectrum-Table-headCell {
    box-sizing: border-box;
    text-align: start;
    font-size: var(--spectrum-table-compact-header-text-size);
    font-weight: var(--spectrum-table-compact-header-text-font-weight);
    line-height: var(--spectrum-table-compact-header-text-line-height);
    min-block-size: var(--spectrum-table-compact-header-min-height);

    padding-block: var(--spectrum-table-compact-header-padding-top) var(--spectrum-table-compact-header-padding-bottom);
    padding-inline: var(--spectrum-table-compact-header-padding-left) var(--spectrum-table-compact-header-padding-right);
    transition: color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;
    cursor: default;
    outline: 0;
    border-radius: var(--spectrum-table-compact-header-border-radius);

    &.is-sortable {
      cursor: pointer;
    }

    &.is-sorted-asc,
    &.is-sorted-desc {
      .spectrum-Table-sortedIcon {
        display: inline-block;
        /* offset icon because it's not properly aligned */
        margin-block-start: calc(var(--spectrum-global-dimension-size-25) * -1);
      }
    }

    &.is-sorted-asc {
      .spectrum-Table-sortedIcon {
        transform: rotateZ(-90deg);
      }
    }
  }

  .spectrum-Table-cell--alignCenter {
    text-align: center;
  }

  .spectrum-Table-cell--alignRight {
    text-align: end;
  }

  .spectrum-Table-body {
    position: relative;

    border-width: var(--spectrum-table-compact-border-size);
    border-radius: var(--spectrum-table-compact-border-radius);
    overflow: auto;
    vertical-align: var(--spectrum-table-compact-cell-vertical-alignment);

    &.is-drop-target {
      @inherit: %drop-target;
    }
  }

  /* The tbody tag doesn't allow setting a border-radius, so these hacks are to make that work
    by putting it on the individual cells instead. */
  .spectrum-Table:not(.spectrum-Table--quiet) {
    tbody.spectrum-Table-body {
      border-width: var(--spectrum-table-compact-border-size);
      border-radius: var(--spectrum-table-compact-border-radius);

      .spectrum-Table-row:first-child .spectrum-Table-cell:first-child {
        border-start-start-radius: var(--spectrum-table-compact-border-radius);
      }

      .spectrum-Table-row:first-child .spectrum-Table-cell:last-child {
        border-start-end-radius: var(--spectrum-table-compact-border-radius);
      }

      .spectrum-Table-row:last-child .spectrum-Table-cell:first-child {
        border-end-start-radius: var(--spectrum-table-compact-border-radius);
      }

      .spectrum-Table-row:last-child .spectrum-Table-cell:last-child {
        border-end-end-radius: var(--spectrum-table-compact-border-radius);
      }
    }
  }

  .spectrum-Table-cell {
    box-sizing: border-box;
    font-size: var(--spectrum-table-compact-cell-text-size);
    font-weight: var(--spectrum-table-compact-cell-text-font-weight);
    line-height: var(--spectrum-table-compact-cell-text-line-height);
    padding-block: var(--spectrum-table-compact-cell-padding-top) var(--spectrum-table-compact-cell-padding-bottom);
    padding-inline: var(--spectrum-table-compact-cell-padding-left) var(--spectrum-table-compact-cell-padding-right);
    /* Subtract top/bottom padding for this value to be correct in this implementation */
    min-block-size: calc(var(--spectrum-table-compact-cell-min-height) - calc(var(--spectrum-table-compact-cell-padding-top) + var(--spectrum-table-compact-cell-padding-bottom)));
  }

  .spectrum-Table-cell,
  .spectrum-Table-headCell {
    position: relative;

    &:focus-ring,
    &.is-focused {
      outline: none;

      &::before {
        content: '';

        /* Float above border */
        z-index: 1;
        position: absolute;

        inset-block-start: 0;
        inset-inline-end: 0;
        inset-block-end: 0;
        inset-inline-start: 0;

        border-radius: calc(var(--spectrum-table-compact-cell-border-radius-key-focus) - 1px);
      }
    }
  }

  .spectrum-Table-headCell {
    &:focus-ring,
    &.is-focused {
      &::before {
        inset-block-start: var(--spectrum-table-compact-border-size);
        inset-inline-end: var(--spectrum-table-compact-border-size);
        inset-block-end: var(--spectrum-table-compact-border-size);
        inset-inline-start: var(--spectrum-table-compact-border-size);
      }
    }
  }

  .spectrum-Table-cell--divider {
    border-inline-end-width: var(--spectrum-table-compact-divider-border-size);
  }

  .spectrum-Table-row {
    position: relative;
    cursor: pointer;
    transition: background-color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;

    &:focus {
      outline: 0;
    }

    &.is-drop-target {
      @inherit: %drop-target;
    }
  }

  .spectrum-Table > .spectrum-Table-body > .spectrum-Table-row:last-of-type {
    border-block-end-style: none;
  }

  .spectrum-Table--quiet {
    .spectrum-Table-body {
      border-radius: 0;
    }

    .spectrum-Table-body,
    .spectrum-Table-row {
      &.is-drop-target {
        &::before {
          border-radius: 0;
        }
      }
    }
  }

  .spectrum-Table-checkboxCell {
    padding-inline-end: var(--spectrum-table-compact-cell-checkbox-padding-right);
    /* have to eliminate vertical padding to allow proper vertical alignment */
    padding-block-start: 0px;
    padding-block-end: 0px;
    vertical-align: var(--spectrum-table-compact-cell-checkbox-vertical-alignment);
  }

  .spectrum-Table-checkbox {
    vertical-align: super;
  }
}


.spectrum-Table--spacious {
  .spectrum-Table-sortedIcon {
    display: none;
    margin-inline-start: var(--spectrum-table-spacious-header-sort-icon-gap);
    vertical-align: middle;
    transition: transform var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;
  }

  .spectrum-Table-headCell {
    box-sizing: border-box;
    text-align: start;
    font-size: var(--spectrum-table-spacious-header-text-size);
    font-weight: var(--spectrum-table-spacious-header-text-font-weight);
    line-height: var(--spectrum-table-spacious-header-text-line-height);
    min-block-size: var(--spectrum-table-spacious-header-min-height);
    padding-block: var(--spectrum-table-spacious-header-padding-top) var(--spectrum-table-spacious-header-padding-bottom);
    padding-inline: var(--spectrum-table-spacious-header-padding-left) var(--spectrum-table-spacious-header-padding-right);
    transition: color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;
    cursor: default;
    outline: 0;
    border-radius: var(--spectrum-table-spacious-header-border-radius);

    &.is-sortable {
      cursor: pointer;
    }

    &.is-sorted-asc,
    &.is-sorted-desc {
      .spectrum-Table-sortedIcon {
        display: inline-block;
        /* offset icon because it's not properly aligned */
        margin-block-start: calc(var(--spectrum-global-dimension-size-25) * -1);
      }
    }

    &.is-sorted-asc {
      .spectrum-Table-sortedIcon {
        transform: rotateZ(-90deg);
      }
    }
  }

  .spectrum-Table-cell--alignCenter {
    text-align: center;
  }

  .spectrum-Table-cell--alignRight {
    text-align: end;
  }

  .spectrum-Table-body {
    position: relative;
    border-width: var(--spectrum-table-spacious-border-size);
    border-radius: var(--spectrum-table-spacious-border-radius);
    overflow: auto;
    vertical-align: var(--spectrum-table-spacious-cell-vertical-alignment);

    &.is-drop-target {
      @inherit: %drop-target;
    }
  }

  /* The tbody tag doesn't allow setting a border-radius, so these hacks are to make that work
    by putting it on the individual cells instead. */
  .spectrum-Table:not(.spectrum-Table--quiet) {
    tbody.spectrum-Table-body {
      border-width: var(--spectrum-table-spacious-border-size);
      border-radius: var(--spectrum-table-spacious-border-radius);

      .spectrum-Table-row:first-child .spectrum-Table-cell:first-child {
        border-start-start-radius: var(--spectrum-table-spacious-border-radius);
      }

      .spectrum-Table-row:first-child .spectrum-Table-cell:last-child {
        border-start-end-radius: var(--spectrum-table-spacious-border-radius);
      }

      .spectrum-Table-row:last-child .spectrum-Table-cell:first-child {
        border-end-start-radius: var(--spectrum-table-spacious-border-radius);
      }

      .spectrum-Table-row:last-child .spectrum-Table-cell:last-child {
        border-end-end-radius: var(--spectrum-table-spacious-border-radius);
      }
    }
  }

  .spectrum-Table-cell {
    box-sizing: border-box;
    font-size: var(--spectrum-table-spacious-cell-text-size);
    font-weight: var(--spectrum-table-spacious-cell-text-font-weight);
    line-height: var(--spectrum-table-spacious-cell-text-line-height);
    padding-block: var(--spectrum-table-spacious-cell-padding-top) var(--spectrum-table-spacious-cell-padding-bottom);
    padding-inline: var(--spectrum-table-spacious-cell-padding-left) var(--spectrum-table-spacious-cell-padding-right);
    /* Subtract top/bottom padding for this value to be correct in this implementation */
    min-block-size: calc(var(--spectrum-table-spacious-cell-min-height) - calc(var(--spectrum-table-spacious-cell-padding-top) + var(--spectrum-table-spacious-cell-padding-bottom)));
  }

  .spectrum-Table-cell,
  .spectrum-Table-headCell {
    position: relative;

    &:focus-ring,
    &.is-focused {
      outline: none;

      &::before {
        content: '';

        /* Float above border */
        z-index: 1;
        position: absolute;

        inset-block-start: 0;
        inset-inline-end: 0;
        inset-block-end: 0;
        inset-inline-start: 0;

        border-radius: calc(var(--spectrum-table-spacious-cell-border-radius-key-focus) - 1px);
      }
    }
  }

  .spectrum-Table-headCell {
    &:focus-ring,
    &.is-focused {
      &::before {
        inset-block-start: var(--spectrum-table-spacious-border-size);
        inset-inline-end: var(--spectrum-table-spacious-border-size);
        inset-block-end: var(--spectrum-table-spacious-border-size);
        inset-inline-start: var(--spectrum-table-spacious-border-size);
      }
    }
  }

  .spectrum-Table-cell--divider {
    border-inline-end-width: var(--spectrum-table-spacious-divider-border-size);
  }

  .spectrum-Table-row {
    position: relative;
    cursor: pointer;
    transition: background-color var(--mod-table-transition-duration, var(--spectrum-table-transition-duration)) ease-in-out;

    &:focus {
      outline: 0;
    }

    &.is-drop-target {
      @inherit: %drop-target;
    }
  }

  .spectrum-Table > .spectrum-Table-body > .spectrum-Table-row:last-of-type {
    border-block-end-style: none;
  }

  .spectrum-Table--quiet {
    .spectrum-Table-body {
      border-radius: 0;
    }

    .spectrum-Table-body,
    .spectrum-Table-row {
      &.is-drop-target {
        &::before {
          border-radius: 0;
        }
      }
    }
  }

  .spectrum-Table-checkboxCell {
    padding-inline-end: var(--spectrum-table-spacious-cell-checkbox-padding-right);
    /* have to eliminate vertical padding to allow proper vertical alignment */
    padding-block-start: 0px;
    padding-block-end: 0px;
    vertical-align: var(--spectrum-table-spacious-cell-checkbox-vertical-alignment);
  }

  .spectrum-Table-checkbox {
    vertical-align: super;
  }
}
