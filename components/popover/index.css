/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-Popover {
	/* TODO: replace with core tokens */
	--spectrum-overlay-animation-distance: 6px;
	--spectrum-overlay-animation-duration: var(--spectrum-animation-duration-100);

	/* change to offset from source */
	--spectrum-popover-inline-offset: 0;
	--spectrum-popover-block-offset: 0;

	--spectrum-popover-background-color: var(--spectrum-background-layer-2-color);
	--spectrum-popover-border-color: var(--spectrum-gray-400);

	/* popover inner padding */
	--spectrum-popover-content-area-spacing-vertical: var(
		--spectrum-popover-top-to-content-area
	);

	/* popover drop shadow */
	--spectrum-popover-shadow-horizontal: var(--spectrum-drop-shadow-x);
	--spectrum-popover-shadow-vertical: var(--spectrum-drop-shadow-y);
	--spectrum-popover-shadow-blur: var(--spectrum-drop-shadow-blur);
	--spectrum-popover-shadow-color: var(--spectrum-drop-shadow-color);

	/* popover corner radius */
	--spectrum-popover-corner-radius: var(--spectrum-corner-radius-100);

	/* pointer tip dimensions */
	--spectrum-popover-pointer-width: var(--spectrum-popover-tip-width);
	--spectrum-popover-pointer-height: var(--spectrum-popover-tip-height);

	/* pointer tip - default spacing to edge - corner radius plus half of tip width to neutralize override */
	--spectrum-popover-pointer-edge-offset: calc(
		var(--spectrum-corner-radius-100) + (var(--spectrum-popover-tip-width) / 2)
	);

	/* pointer tip - spacing to edge will center pointer to source - apply in markup by setting '--spectrum-popover-pointer-edge-offset' value == half of source */
	--spectrum-popover-pointer-edge-spacing: calc(
		var(--spectrum-popover-pointer-edge-offset) -
			(var(--spectrum-popover-tip-width) / 2)
	);
	--spectrum-popover-filter: drop-shadow(
		var(
				--mod-popover-shadow-horizontal,
				var(--spectrum-popover-shadow-horizontal)
			)
			var(
				--mod-popover-shadow-vertical,
				var(--spectrum-popover-shadow-vertical)
			)
			var(--mod-popover-shadow-blur, var(--spectrum-popover-shadow-blur))
			var(--mod-popover-shadow-color, var(--spectrum-popover-shadow-color))
	);

	/* default opens and animates upward */
	&.is-open {
		--mod-popover-visibility: visible;
		--mod-popover-opacity: 1;
		/* transition-delay: 0ms; */
		/* pointer-events: auto; */
	}

	/* prevent nested popovers from affecting each others drop shadow filters */
	> * {
		--mod-popover-filter: none;
	}

	/* position naming - first position term is popover position, second term is source position */
	/* example: --top-left = popover is to top and source is to left */
	&--top {
		--mod-popover-position-inline-start: 0;
		--mod-popover-position-block-start: 0;
		--mod-popover-transform: translateX(
				calc(
					var(--spectrum-popover-trigger-inline-center) -
						var(--spectrum-popover-width) / 2
				)
			)
			translateY(calc(244px - var(--spectrum-popover-offset)));
		--mod-popover-block-offset: 0 var(--spectrum-popover-block-offset);
	}

	&--top-left,
	&--top-right,
	&--top-start,
	&--top-end {
		--mod-popover-position-block-start: -100%;
		--mod-popover-position-block-end: auto;
		/* popover animates upward ⬆ */
		--mod-popover-transform: translateY(
			calc(-1 * var(--spectrum-overlay-animation-distance))
		);
		--mod-popover-block-offset: 0 var(--spectrum-popover-block-offset);
	}

	&--bottom,
	&--bottom-left,
	&--bottom-right,
	&--bottom-start,
	&--bottom-end {
		--mod-popover-block-offset: var(--spectrum-popover-block-offset) 0;
		/* popover animates downward ⬇ */
		--mod-popover-transform: translateY(
			var(--spectrum-overlay-animation-distance)
		);
		--mod-popover-pointer-transform: scaleX(-1);
		--mod-popover-pointer-block-position: auto 100%;
	}

	/* left popover with tip pointing right ▷ */
	&--left,
	&--left-bottom,
	&--left-top {
		/* popover animates towards left ⬅ */
		--mod-popover-transform: translateX(
			calc(-1 * var(--spectrum-overlay-animation-distance))
		);
		--mod-popover-inline-offset: 0 var(--spectrum-popover-inline-offset);
		/* swap height and width for vertical triangle */
		--mod-popover-pointer-width: var(
			--mod-popover-pointer-height,
			var(--spectrum-popover-pointer-height)
		);
		--mod-popover-pointer-height: var(
			--mod-popover-pointer-width,
			var(--spectrum-popover-pointer-width)
		);
		--mod-popover-pointer-inline-position: 100% auto;
	}

	/* right popover with tip pointing left ◁ */
	&--right,
	&--right-bottom,
	&--right-top {
		/* popover animates towards right ⮕ */
		--mod-popover-transform: translateX(
			var(--spectrum-overlay-animation-distance)
		);
		--mod-popover-inline-offset: var(--spectrum-popover-inline-offset) 0;
		/* swap height and width for vertical triangle */
		--mod-popover-pointer-width: var(
			--mod-popover-pointer-height,
			var(--spectrum-popover-pointer-height)
		);
		--mod-popover-pointer-height: var(
			--mod-popover-pointer-width,
			var(--spectrum-popover-pointer-width)
		);
		--mod-popover-pointer-inline-position: auto 100%;
		--mod-popover-pointer-transform: scaleX(-1);
	}

	/* logical property - start popover position with tip pointing toward end -  LTR default is ▷ */
	&--start,
	&--start-top,
	&--start-bottom {
		--mod-popover-inline-offset: 0 var(--spectrum-popover-inline-offset);
		/* popover animates towards left ⬅ */
		--mod-popover-transform: translateX(
			calc(-1 * var(--spectrum-overlay-animation-distance))
		);
		/* swap height and width for vertical triangle */
		--mod-popover-pointer-width: var(
			--mod-popover-pointer-height,
			var(--spectrum-popover-pointer-height)
		);
		--mod-popover-pointer-height: var(
			--mod-popover-pointer-width,
			var(--spectrum-popover-pointer-width)
		);
		--mod-popover-pointer-inline-offset: 100% auto;

		&:dir(rtl) {
			--mod-popover-pointer-transform: scaleX(-1);
			/* popover animates towards right ⮕ */
			--mod-popover-transform: translateX(
				var(--spectrum-overlay-animation-distance)
			);
		}
	}

	&--end,
	&--end-top,
	&--end-bottom {
		/* popover animates towards right ⮕ */
		--mod-popover-transform: translateX(
			var(--spectrum-overlay-animation-distance)
		);
		--mod-popover-inline-offset: var(--spectrum-popover-inline-offset) 0;
		/* swap height and width for vertical triangle */
		--mod-popover-pointer-width: var(
			--mod-popover-pointer-height,
			var(--spectrum-popover-pointer-height)
		);
		--mod-popover-pointer-height: var(
			--mod-popover-pointer-width,
			var(--spectrum-popover-pointer-width)
		);
		--mod-popover-pointer-inline-offset: auto 100%;

		&:dir(rtl) {
			/* popover animates towards left ⬅ */
			--mod-popover-transform: translateX(
				calc(-1 * var(--spectrum-overlay-animation-distance))
			);
		}

		&:not(:dir(rtl)) {
			--mod-popover-pointer-transform: scaleX(-1);
		}
	}

	/* popover is at top/bottom, source is at left */
	&--top-left,
	&--bottom-left {
		--mod-popover-pointer-inline-position: var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			)
			auto;
	}

	/* popover is at top/bottom of source, tip right */
	&--top-right,
	&--bottom-right {
		--mod-popover-pointer-inline-position: auto
			var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			);
	}

	/* logical property - popover is below, source is at start, tip pointing up △ */
	&--bottom-start,
	&--top-start {
		--mod-popover-position-inline-start: calc(
			(var(--spectrum-popover-width) / 2) -
				var(--spectrum-popover-pointer-edge-offset)
		);
		--mod-popover-pointer-inline-offset: var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			)
			auto;
	}

	/* logical property - popover is below, source is at end, tip pointing up △ */
	&--bottom-end,
	&--top-end {
		--mod-popover-position-inline-start: calc(
			-1 * (var(--spectrum-popover-width) / 2) + var(--spectrum-popover-pointer-edge-offset)
		);
		--mod-popover-pointer-inline-offset: auto
			var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			);
	}

	&--left,
	&--right,
	&--start,
	&--end {
		--mod-popover-pointer-block-position: 0;
	}

	/* popover with tip at top */
	&--right-top,
	&--left-top,
	&--start-top,
	&--end-top {
		--mod-popover-pointer-block-position: var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			)
			auto;
	}

	/* popover with tip at bottom */
	&--right-bottom,
	&--left-bottom,
	&--start-bottom,
	&--end-bottom {
		--mod-popover-pointer-block-position: auto
			var(
				--mod-popover-pointer-edge-spacing,
				var(--spectrum-popover-pointer-edge-spacing)
			);
	}
}

.spectrum-Popover {
	visibility: var(--mod-popover-visibility, hidden);
	opacity: var(--mod-popover-opacity, 0);

	transform: var(--mod-popover-transform, none);
	transition: transform var(--spectrum-overlay-animation-duration) ease-in-out,
		opacity var(--spectrum-overlay-animation-duration) ease-in-out,
		visibility 0ms linear var(--spectrum-overlay-animation-duration);

	pointer-events: none;

	box-sizing: border-box;
	position: absolute;
	inset-inline-start: var(--mod-popover-position-inline-start);
	inset-inline-end: var(--mod-popover-position-inline-end);
	inset-block-start: var(--mod-popover-position-block-start);
	inset-block-end: var(--mod-popover-position-block-end);

	outline: none; /* Hide focus outline */

	padding-block: var(
		--mod-popover-content-area-spacing-vertical,
		var(--spectrum-popover-content-area-spacing-vertical)
	);
	padding-inline: var(--mod-popover-content-area-spacing-horizontal, 0);
	margin-block: var(--mod-popover-block-offset);
	margin-inline: var(--mod-popover-inline-offset);

	display: inline-flex;
	flex-direction: column;

	border-style: solid;
	border-radius: var(
		--mod-popover-corner-radius,
		var(--spectrum-popover-corner-radius)
	);
	border-color: var(
		--highcontrast-popover-border-color,
		var(--mod-popover-border-color, var(--spectrum-popover-border-color))
	);
	border-width: var(
		--mod-popover-border-width,
		var(--spectrum-popover-border-width)
	);

	background-color: var(
		--mod-popover-background-color,
		var(--spectrum-popover-background-color)
	);
	filter: var(--mod-popover-filter, var(--spectrum-popover-filter));

	&-tip {
		inline-size: var(
			--mod-popover-pointer-width,
			var(--spectrum-popover-pointer-width)
		);
		block-size: var(
			--mod-popover-pointer-height,
			var(--spectrum-popover-pointer-height)
		);
		position: absolute;
		inset-block: var(--mod-popover-pointer-block-position, 100% 0);
		inset-inline: var(--mod-popover-pointer-inline-position, 0);
		margin-inline: var(--mod-popover-pointer-inline-offset, auto);
		margin-block: var(--mod-popover-pointer-block-margin, auto);
		/* https://stackoverflow.com/questions/44170229/how-to-prevent-half-pixel-svg-shift-on-high-pixel-ratio-devices-retina */
		transform: var(--mod-popover-pointer-transform, scaleX(1)) translate(0, 0);
	}

	/* has tip triangle */
	&-tip-triangle {
		stroke-linecap: square;
		stroke-linejoin: miter;
		fill: var(
			--highcontrast-popover-background-color,
			var(
				--mod-popover-background-color,
				var(--spectrum-popover-background-color)
			)
		);
		stroke: var(
			--highcontrast-popover-border-color,
			var(--mod-popover-border-color, var(--spectrum-popover-border-color))
		);
		stroke-width: var(
			--mod-popover-border-width,
			var(--spectrum-popover-border-width)
		);
	}
}

/* windows high contrast mode */
@media (forced-colors: active) {
	.spectrum-Popover {
		--highcontrast-popover-border-color: CanvasText;
	}
}
