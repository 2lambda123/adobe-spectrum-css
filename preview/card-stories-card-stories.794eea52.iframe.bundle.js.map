{"version":3,"file":"card-stories-card-stories.794eea52.iframe.bundle.js","mappings":";;;AAyGA;;AAKA;AAMA;AAKA;AAIA;;;;AClFA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;;AAEA;AAQA;AAQA;;AAKA;ACnEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;AAKA;AACA;AAIA;;AAEA;AACA;;ACUA;AASA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AACA;AAMA;;AAOA;;AAKA;;AClEA;AASA;;AAEA;;AArBA;;ACoBA;AASA;;AAEA;;AAEA;;AAMA;AAaA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;;;AAWA;AAGA;AACA;AACA;;;AAKA;AACA;AACA;;AAEA;AAkBA","sources":["webpack://@spectrum-css/preview/../components/actionbutton/stories/index.js","webpack://@spectrum-css/preview/../components/actionbutton/stories/template.js","webpack://@spectrum-css/preview/../components/asset/stories/template.js","webpack://@spectrum-css/preview/../components/checkbox/stories/template.js","webpack://@spectrum-css/preview/../components/quickaction/stories/template.js","webpack://@spectrum-css/preview/../components/card/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport { Template } from \"./template\";\n\nimport { default as IconStories } from \"@spectrum-css/icon\";\n\nexport const argTypes = {\n\tsize: {\n\t\tname: \"Size\",\n\t\ttype: { name: \"string\", required: true },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\toptions: [\"xs\", \"s\", \"m\", \"l\", \"xl\"],\n\t\tcontrol: \"select\",\n\t},\n\ticonName: {\n\t\t...(IconStories?.argTypes?.iconName ?? {}),\n\t\tif: false,\n\t},\n\tlabel: {\n\t\tname: \"Label\",\n\t\ttype: { name: \"string\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Content\",\n\t\t},\n\t\tcontrol: { type: \"text\" },\n\t},\n\tisQuiet: {\n\t\tname: \"Quiet styling\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisEmphasized: {\n\t\tname: \"Emphasized styling\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Component\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisDisabled: {\n\t\tname: \"Disabled\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"State\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tisSelected: {\n\t\tname: \"Selected\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"State\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\thideLabel: {\n\t\tname: \"Hide label\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\thasPopup: {\n\t\tname: \"Has popup\",\n\t\tdescription: \"True if the button triggers a popup action.\",\n\t\ttype: { name: \"boolean\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"boolean\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\tcontrol: \"boolean\",\n\t},\n\tstaticColor: {\n\t\tname: \"StaticColor\",\n\t\ttype: { name: \"string\" },\n\t\ttable: {\n\t\t\ttype: { summary: \"string\" },\n\t\t\tcategory: \"Advanced\",\n\t\t},\n\t\toptions: [\"white\", \"black\"],\n\t\tcontrol: \"select\",\n\t},\n};\n\nexport const ActionButtons = ({\n\tstaticColor,\n\t...args\n}) => {\n\treturn html`\n\t\t<div\n      \t\tstyle=${ifDefined(styleMap({\n\t\t\t\tpadding: \"1rem\",\n\t\t\t\tbackgroundColor: staticColor === \"white\" ? \"rgb(15, 121, 125)\" : staticColor === \"black\" ? \"rgb(181, 209, 211)\" : undefined,\n\t\t\t}))}\n\t\t>\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\tlabel: \"More\",\n\t\t\t\ticonName: undefined,\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\tlabel: \"More\",\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t})}\n\t\t\t${Template({\n\t\t\t\t...args,\n\t\t\t\tstaticColor,\n\t\t\t\thasPopup: true,\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionButton\",\n\tsize = \"m\",\n\ticonName,\n\tlabel,\n\tisQuiet = false,\n\tisSelected = false,\n\tisEmphasized = false,\n\tisDisabled = false,\n\thasPopup = false,\n\thideLabel = false,\n\tstaticColor,\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tcustomIconClasses = [],\n\tonclick,\n\tid,\n\trole,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<button\n\t\t\taria-label=${ifDefined(label)}\n\t\t\taria-haspopup=${hasPopup ? \"true\" : \"false\"}\n\t\t\taria-pressed=${isSelected ? \"true\" : \"false\"}\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t[`is-disabled`]: isDisabled,\n\t\t\t\t[`is-selected`]: isSelected,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=${ifDefined(role)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${when(hasPopup, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: \"CornerTriangle100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-hold`],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(iconName, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`, ...customIconClasses],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(\n\t\t\t\tlabel && !hideLabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</button>\n\t`;\n};\n","import { html, svg } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport \"../index.css\";\nimport \"../skin.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Asset\",\n\timage,\n\tpreset,\n\tid,\n\tcustomClasses = [],\n\t// ...globals\n}) => {\n\tlet visual;\n\tif (preset === \"file\") {\n\t\tvisual = svg`\n    <svg viewBox=\"0 0 128 128\" class=\"${rootClass}-file\" width=\"10\">\n      <path class=\"${rootClass}-fileBackground\" d=\"M24,126c-5.5,0-10-4.5-10-10V12c0-5.5,4.5-10,10-10h61.5c2.1,0,4.1,0.8,5.6,2.3l20.5,20.4c1.5,1.5,2.4,3.5,2.4,5.7V116c0,5.5-4.5,10-10,10H24z\"></path>\n      <path class=\"${rootClass}-fileOutline\" d=\"M113.1,23.3L92.6,2.9C90.7,1,88.2,0,85.5,0H24c-6.6,0-12,5.4-12,12v104c0,6.6,5.4,12,12,12h80c6.6,0,12-5.4,12-12V30.4C116,27.8,114.9,25.2,113.1,23.3z M90,6l20.1,20H92c-1.1,0-2-0.9-2-2V6z M112,116c0,4.4-3.6,8-8,8H24c-4.4,0-8-3.6-8-8V12c0-4.4,3.6-8,8-8h61.5c0.2,0,0.3,0,0.5,0v20c0,3.3,2.7,6,6,6h20c0,0.1,0,0.3,0,0.4V116z\"></path>\n    </svg>`;\n\t} else if (preset === \"folder\") {\n\t\tvisual = svg`\n      <svg viewBox=\"0 0 32 32\" class=\"${rootClass}-folder\" width=\"10\">\n        <path class=\"${rootClass}-folderBackground\" d=\"M3,29.5c-1.4,0-2.5-1.1-2.5-2.5V5c0-1.4,1.1-2.5,2.5-2.5h10.1c0.5,0,1,0.2,1.4,0.6l3.1,3.1c0.2,0.2,0.4,0.3,0.7,0.3H29c1.4,0,2.5,1.1,2.5,2.5v18c0,1.4-1.1,2.5-2.5,2.5H3z\"></path>\n        <path class=\"${rootClass}-folderOutline\" d=\"M29,6H18.3c-0.1,0-0.2,0-0.4-0.2l-3.1-3.1C14.4,2.3,13.8,2,13.1,2H3C1.3,2,0,3.3,0,5v22c0,1.6,1.3,3,3,3h26c1.7,0,3-1.4,3-3V9C32,7.3,30.7,6,29,6z M31,27c0,1.1-0.9,2-2,2H3c-1.1,0-2-0.9-2-2V7h28c1.1,0,2,0.9,2,2V27z\"></path>\n      </svg>`;\n\t} else if (image) {\n\t\tvisual = html`<img\n\t\t\tclass=\"${rootClass}-image\"\n\t\t\tsrc=${ifDefined(image)}\n\t\t\tstyle=\"max-width: 75%; max-height: 75%; object-fit: contain;\"\n\t\t/>`;\n\t}\n\n\treturn html` <div\n\t\tclass=${classMap({\n\t\t\t[rootClass]: true,\n\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t})}\n\t\tid=${ifDefined(id)}\n\t>\n\t\t${visual}\n\t</div>`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { useArgs } from \"@storybook/client-api\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Checkbox\",\n\tsize = \"m\",\n\tlabel,\n\tisChecked = false,\n\tisEmphasized = false,\n\tisIndeterminate = false,\n\tisDisabled = false,\n\ttitle,\n\tvalue,\n\tid,\n\tariaLabelledby,\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tconst [_, updateArgs] = useArgs();\n\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\tlet iconSize = \"75\";\n\tswitch (size) {\n\t\tcase \"s\":\n\t\t\ticonSize = \"50\";\n\t\t\tbreak;\n\t\tcase \"l\":\n\t\t\ticonSize = \"100\";\n\t\t\tbreak;\n\t\tcase \"xl\":\n\t\t\ticonSize = \"200\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ticonSize = \"75\";\n\t}\n\n\treturn html`\n\t\t<label\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`is-indeterminate`]: isIndeterminate,\n\t\t\t\t[`is-disabled`]: isDisabled,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tclass=\"${rootClass}-input\"\n\t\t\t\taria-labelledby=${ifDefined(ariaLabelledby)}\n\t\t\t\t?checked=${isChecked}\n\t\t\t\t?disabled=${isDisabled}\n\t\t\t\ttitle=${ifDefined(title)}\n\t\t\t\tvalue=${ifDefined(value)}\n\t\t\t\t@change=${() => {\n\t\t\t\t\tif (isDisabled) return;\n\t\t\t\t\tupdateArgs({ isChecked: !isChecked });\n\t\t\t\t}}\n\t\t\t\tid=${ifDefined(id ? `${id}-input` : undefined)}\n\t\t\t/>\n\t\t\t<span class=\"${rootClass}-box\">\n\t\t\t\t${Icon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: `Checkmark${iconSize}`,\n\t\t\t\t\tcustomClasses: [`${rootClass}-checkmark`],\n\t\t\t\t})}\n\t\t\t\t${Icon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: `Dash${iconSize}`,\n\t\t\t\t\tcustomClasses: [`${rootClass}-partialCheckmark`],\n\t\t\t\t})}\n\t\t\t</span>\n\t\t\t${when(\n\t\t\t\tlabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</label>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\n\nimport \"../index.css\";\nimport \"../skin.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-QuickActions\",\n\tsize = \"m\",\n\tisOpen = false,\n\ttextOnly = false,\n\tposition,\n\t// noOverlay = false,\n\tcontent = [],\n\tid,\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tif (!content.length) {\n\t\tconsole.warn(\"QuickActions: requires content be passed in to render.\");\n\t\treturn html``;\n\t}\n\n\tif (!content.some((c) => c.icon)) {\n\t\ttextOnly = true;\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=\"${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t[`${rootClass}--textOnly`]: textOnly,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\"\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t\t${content.map((c) => {\n\t\t\t\tif ((typeof c === \"object\" && c.iconName) || c.label) {\n\t\t\t\t\treturn ActionButton({ ...globals, ...c, isQuiet: true });\n\t\t\t\t} else return c;\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { useArgs } from \"@storybook/client-api\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\nimport { Template as QuickAction } from \"@spectrum-css/quickaction/stories/template.js\";\nimport { Template as Checkbox } from \"@spectrum-css/checkbox/stories/template.js\";\nimport { Template as Asset } from \"@spectrum-css/asset/stories/template.js\";\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport '../index.css';\n\nexport const Template = ({\n  rootClass = \"spectrum-Card\",\n  image,\n  title,\n  subtitle,\n  description,\n  footer,\n  isFocused = false,\n  isSelected = false,\n  isHorizontal = false,\n  isQuiet = false,\n  isGallery = false,\n  isGrid = false,\n  isDropTarget = false,\n  hasQuickAction = false,\n  hasActions = false,\n  showAsset,\n  customClasses = [],\n  onclick,\n  id,\n  role,\n  ...globals\n}) => {\n\tconst [_, updateArgs] = useArgs();\n\n  return html`\n    <div\n      class=${classMap({\n        [rootClass]: true,\n        'is-selected': isSelected,\n        'is-focused': isFocused,\n        [`${rootClass}--quiet`]: isQuiet,\n        [`${rootClass}--gallery`]: isGallery,\n        [`${rootClass}--horizontal`]: isHorizontal,\n        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n      })}\n      id=${ifDefined(id)}\n      tabindex=\"0\"\n      role=${ifDefined(image || showAsset ? \"figure\" : isGrid ? \"rowheader\" : role)}\n    >\n      ${when(\n        image || showAsset,\n        () => when(\n          showAsset || (isGallery && image),\n          () => html`\n            <div class=\"spectrum-Card-preview\">\n              ${when(\n                !isHorizontal,\n                () => Asset({\n                  ...globals,\n                  image,\n                  preset: !image ? showAsset : undefined,\n                }),\n                () => Icon({\n                  ...globals,\n                  size: \"xxl\",\n                  iconName: showAsset === \"folder\" ? \"File\" : \"Document\",\n                })\n              )}\n            </div>`,\n          () => html`<div class=\"${rootClass}-coverPhoto\" style=\"background-image: url(${image})\"></div>`\n        )\n      )}\n      ${when(\n        title || subtitle,\n        () => html`\n          <div class=\"${rootClass}-body\">\n            ${when(\n              title || hasActions,\n              () => html`\n                <div class=\"${rootClass}-header\">\n                ${when(title, () => html`<div class=\"${rootClass}-title spectrum-Heading spectrum-Heading--sizeXS\">${title}</div>`)}\n                ${when(hasActions && !isHorizontal,\n                  () => html`\n                    <div class=\"${rootClass}-actionButton\">\n                      ${ActionButton({\n                        ...globals,\n                        iconName: \"More\",\n                        variant: \"overBackground\",\n                        size: \"m\",\n                        isQuiet: true\n                      })}\n                    </div>`\n                )}\n                </div>`\n            )}\n            ${when(\n              subtitle || description,\n              () => html`\n              <div class=\"${rootClass}-content\">\n                ${when(subtitle, () => html`<div class=\"${rootClass}-subtitle spectrum-Detail spectrum-Detail--sizeS\">${subtitle}</div>`)}\n                ${when(description, () => html`<div class=\"${rootClass}-description\">${description}</div>`)}\n              </div>`\n            )}\n          </div>`\n      )}\n      ${when(footer, () => html`\n        <div class=\"${rootClass}-footer\">\n          ${footer}\n        </div>`)}\n      ${when(\n        hasQuickAction && !isHorizontal,\n        () => QuickAction({\n          ...globals,\n          noOverlay: true,\n          content: [\n            Checkbox({\n              ...globals,\n              isChecked: isSelected,\n              title: \"Select\",\n            }),\n          ],\n          onclick: () => {\n            updateArgs({ isSelected: !isSelected });\n          },\n          customClasses: [`${rootClass}-quickActions`],\n        })\n      )}\n    </div>`;\n};\n"],"names":[],"sourceRoot":""}