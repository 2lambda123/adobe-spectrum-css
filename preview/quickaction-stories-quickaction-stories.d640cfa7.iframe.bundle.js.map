{"version":3,"file":"quickaction-stories-quickaction-stories.d640cfa7.iframe.bundle.js","mappings":";;;AA2CA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;;AAEA;AAQA;AAQA;;AAKA;;ACrDA;AASA;;AAEA;;AArBA","sources":["webpack://@spectrum-css/preview/../components/actionbutton/stories/template.js","webpack://@spectrum-css/preview/../components/quickaction/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionButton\",\n\tsize = \"m\",\n\ticonName,\n\tlabel,\n\tisQuiet = false,\n\tisSelected = false,\n\tisEmphasized = false,\n\tisDisabled = false,\n\thasPopup = false,\n\thideLabel = false,\n\tstaticColor,\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tcustomIconClasses = [],\n\tonclick,\n\tid,\n\trole,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<button\n\t\t\taria-label=${ifDefined(label)}\n\t\t\taria-haspopup=${hasPopup ? \"true\" : \"false\"}\n\t\t\taria-pressed=${isSelected ? \"true\" : \"false\"}\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t[`is-disabled`]: isDisabled,\n\t\t\t\t[`is-selected`]: isSelected,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=${ifDefined(role)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${when(hasPopup, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: \"CornerTriangle100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-hold`],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(iconName, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`, ...customIconClasses],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(\n\t\t\t\tlabel && !hideLabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</button>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\n\nimport \"../index.css\";\nimport \"../skin.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-QuickActions\",\n\tsize = \"m\",\n\tisOpen = false,\n\ttextOnly = false,\n\tposition,\n\t// noOverlay = false,\n\tcontent = [],\n\tid,\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tif (!content.length) {\n\t\tconsole.warn(\"QuickActions: requires content be passed in to render.\");\n\t\treturn html``;\n\t}\n\n\tif (!content.some((c) => c.icon)) {\n\t\ttextOnly = true;\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=\"${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t[`${rootClass}--textOnly`]: textOnly,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\"\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t\t${content.map((c) => {\n\t\t\t\tif ((typeof c === \"object\" && c.iconName) || c.label) {\n\t\t\t\t\treturn ActionButton({ ...globals, ...c, isQuiet: true });\n\t\t\t\t} else return c;\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}